phase_1:Playing games without playing Genshin Impact is like reading Four Classics without reading Dream of Red Mansions.
phase_2:0 1 1 3 5 11 ...TheRightThing2DoAreUsuallyThe3ameThing?
phase_3:1 1424
phase_4:4 8 DoUKnowThatTheHarderThing2DoAnd...
phase_5:543210/765432
phase_6:3 4 5 6 2 1

bomb:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 5f 00 00 	mov    0x5fd9(%rip),%rax        # 6fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 b2 5e 00 00    	push   0x5eb2(%rip)        # 6ed8 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 b3 5e 00 00 	bnd jmp *0x5eb3(%rip)        # 6ee0 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	push   $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmp 1020 <.plt>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	push   $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmp 1020 <.plt>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	push   $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmp 1020 <.plt>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	push   $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmp 1020 <.plt>
    106f:	90                   	nop
    1070:	f3 0f 1e fa          	endbr64 
    1074:	68 04 00 00 00       	push   $0x4
    1079:	f2 e9 a1 ff ff ff    	bnd jmp 1020 <.plt>
    107f:	90                   	nop
    1080:	f3 0f 1e fa          	endbr64 
    1084:	68 05 00 00 00       	push   $0x5
    1089:	f2 e9 91 ff ff ff    	bnd jmp 1020 <.plt>
    108f:	90                   	nop
    1090:	f3 0f 1e fa          	endbr64 
    1094:	68 06 00 00 00       	push   $0x6
    1099:	f2 e9 81 ff ff ff    	bnd jmp 1020 <.plt>
    109f:	90                   	nop
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	68 07 00 00 00       	push   $0x7
    10a9:	f2 e9 71 ff ff ff    	bnd jmp 1020 <.plt>
    10af:	90                   	nop
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	68 08 00 00 00       	push   $0x8
    10b9:	f2 e9 61 ff ff ff    	bnd jmp 1020 <.plt>
    10bf:	90                   	nop
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	68 09 00 00 00       	push   $0x9
    10c9:	f2 e9 51 ff ff ff    	bnd jmp 1020 <.plt>
    10cf:	90                   	nop
    10d0:	f3 0f 1e fa          	endbr64 
    10d4:	68 0a 00 00 00       	push   $0xa
    10d9:	f2 e9 41 ff ff ff    	bnd jmp 1020 <.plt>
    10df:	90                   	nop
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	68 0b 00 00 00       	push   $0xb
    10e9:	f2 e9 31 ff ff ff    	bnd jmp 1020 <.plt>
    10ef:	90                   	nop
    10f0:	f3 0f 1e fa          	endbr64 
    10f4:	68 0c 00 00 00       	push   $0xc
    10f9:	f2 e9 21 ff ff ff    	bnd jmp 1020 <.plt>
    10ff:	90                   	nop
    1100:	f3 0f 1e fa          	endbr64 
    1104:	68 0d 00 00 00       	push   $0xd
    1109:	f2 e9 11 ff ff ff    	bnd jmp 1020 <.plt>
    110f:	90                   	nop
    1110:	f3 0f 1e fa          	endbr64 
    1114:	68 0e 00 00 00       	push   $0xe
    1119:	f2 e9 01 ff ff ff    	bnd jmp 1020 <.plt>
    111f:	90                   	nop
    1120:	f3 0f 1e fa          	endbr64 
    1124:	68 0f 00 00 00       	push   $0xf
    1129:	f2 e9 f1 fe ff ff    	bnd jmp 1020 <.plt>
    112f:	90                   	nop
    1130:	f3 0f 1e fa          	endbr64 
    1134:	68 10 00 00 00       	push   $0x10
    1139:	f2 e9 e1 fe ff ff    	bnd jmp 1020 <.plt>
    113f:	90                   	nop
    1140:	f3 0f 1e fa          	endbr64 
    1144:	68 11 00 00 00       	push   $0x11
    1149:	f2 e9 d1 fe ff ff    	bnd jmp 1020 <.plt>
    114f:	90                   	nop
    1150:	f3 0f 1e fa          	endbr64 
    1154:	68 12 00 00 00       	push   $0x12
    1159:	f2 e9 c1 fe ff ff    	bnd jmp 1020 <.plt>
    115f:	90                   	nop
    1160:	f3 0f 1e fa          	endbr64 
    1164:	68 13 00 00 00       	push   $0x13
    1169:	f2 e9 b1 fe ff ff    	bnd jmp 1020 <.plt>
    116f:	90                   	nop
    1170:	f3 0f 1e fa          	endbr64 
    1174:	68 14 00 00 00       	push   $0x14
    1179:	f2 e9 a1 fe ff ff    	bnd jmp 1020 <.plt>
    117f:	90                   	nop
    1180:	f3 0f 1e fa          	endbr64 
    1184:	68 15 00 00 00       	push   $0x15
    1189:	f2 e9 91 fe ff ff    	bnd jmp 1020 <.plt>
    118f:	90                   	nop
    1190:	f3 0f 1e fa          	endbr64 
    1194:	68 16 00 00 00       	push   $0x16
    1199:	f2 e9 81 fe ff ff    	bnd jmp 1020 <.plt>
    119f:	90                   	nop
    11a0:	f3 0f 1e fa          	endbr64 
    11a4:	68 17 00 00 00       	push   $0x17
    11a9:	f2 e9 71 fe ff ff    	bnd jmp 1020 <.plt>
    11af:	90                   	nop
    11b0:	f3 0f 1e fa          	endbr64 
    11b4:	68 18 00 00 00       	push   $0x18
    11b9:	f2 e9 61 fe ff ff    	bnd jmp 1020 <.plt>
    11bf:	90                   	nop
    11c0:	f3 0f 1e fa          	endbr64 
    11c4:	68 19 00 00 00       	push   $0x19
    11c9:	f2 e9 51 fe ff ff    	bnd jmp 1020 <.plt>
    11cf:	90                   	nop
    11d0:	f3 0f 1e fa          	endbr64 
    11d4:	68 1a 00 00 00       	push   $0x1a
    11d9:	f2 e9 41 fe ff ff    	bnd jmp 1020 <.plt>
    11df:	90                   	nop
    11e0:	f3 0f 1e fa          	endbr64 
    11e4:	68 1b 00 00 00       	push   $0x1b
    11e9:	f2 e9 31 fe ff ff    	bnd jmp 1020 <.plt>
    11ef:	90                   	nop
    11f0:	f3 0f 1e fa          	endbr64 
    11f4:	68 1c 00 00 00       	push   $0x1c
    11f9:	f2 e9 21 fe ff ff    	bnd jmp 1020 <.plt>
    11ff:	90                   	nop
    1200:	f3 0f 1e fa          	endbr64 
    1204:	68 1d 00 00 00       	push   $0x1d
    1209:	f2 e9 11 fe ff ff    	bnd jmp 1020 <.plt>
    120f:	90                   	nop

Disassembly of section .plt.got:

0000000000001210 <__cxa_finalize@plt>:
    1210:	f3 0f 1e fa          	endbr64 
    1214:	f2 ff 25 dd 5d 00 00 	bnd jmp *0x5ddd(%rip)        # 6ff8 <__cxa_finalize@GLIBC_2.2.5>
    121b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001220 <getenv@plt>:
    1220:	f3 0f 1e fa          	endbr64 
    1224:	f2 ff 25 bd 5c 00 00 	bnd jmp *0x5cbd(%rip)        # 6ee8 <getenv@GLIBC_2.2.5>
    122b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001230 <free@plt>:
    1230:	f3 0f 1e fa          	endbr64 
    1234:	f2 ff 25 b5 5c 00 00 	bnd jmp *0x5cb5(%rip)        # 6ef0 <free@GLIBC_2.2.5>
    123b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001240 <strcasecmp@plt>:
    1240:	f3 0f 1e fa          	endbr64 
    1244:	f2 ff 25 ad 5c 00 00 	bnd jmp *0x5cad(%rip)        # 6ef8 <strcasecmp@GLIBC_2.2.5>
    124b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001250 <__errno_location@plt>:
    1250:	f3 0f 1e fa          	endbr64 
    1254:	f2 ff 25 a5 5c 00 00 	bnd jmp *0x5ca5(%rip)        # 6f00 <__errno_location@GLIBC_2.2.5>
    125b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001260 <strcpy@plt>:
    1260:	f3 0f 1e fa          	endbr64 
    1264:	f2 ff 25 9d 5c 00 00 	bnd jmp *0x5c9d(%rip)        # 6f08 <strcpy@GLIBC_2.2.5>
    126b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001270 <puts@plt>:
    1270:	f3 0f 1e fa          	endbr64 
    1274:	f2 ff 25 95 5c 00 00 	bnd jmp *0x5c95(%rip)        # 6f10 <puts@GLIBC_2.2.5>
    127b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001280 <write@plt>:
    1280:	f3 0f 1e fa          	endbr64 
    1284:	f2 ff 25 8d 5c 00 00 	bnd jmp *0x5c8d(%rip)        # 6f18 <write@GLIBC_2.2.5>
    128b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001290 <__stack_chk_fail@plt>:
    1290:	f3 0f 1e fa          	endbr64 
    1294:	f2 ff 25 85 5c 00 00 	bnd jmp *0x5c85(%rip)        # 6f20 <__stack_chk_fail@GLIBC_2.4>
    129b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000012a0 <alarm@plt>:
    12a0:	f3 0f 1e fa          	endbr64 
    12a4:	f2 ff 25 7d 5c 00 00 	bnd jmp *0x5c7d(%rip)        # 6f28 <alarm@GLIBC_2.2.5>
    12ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000012b0 <close@plt>:
    12b0:	f3 0f 1e fa          	endbr64 
    12b4:	f2 ff 25 75 5c 00 00 	bnd jmp *0x5c75(%rip)        # 6f30 <close@GLIBC_2.2.5>
    12bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000012c0 <read@plt>:
    12c0:	f3 0f 1e fa          	endbr64 
    12c4:	f2 ff 25 6d 5c 00 00 	bnd jmp *0x5c6d(%rip)        # 6f38 <read@GLIBC_2.2.5>
    12cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000012d0 <fgets@plt>:
    12d0:	f3 0f 1e fa          	endbr64 
    12d4:	f2 ff 25 65 5c 00 00 	bnd jmp *0x5c65(%rip)        # 6f40 <fgets@GLIBC_2.2.5>
    12db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000012e0 <signal@plt>:
    12e0:	f3 0f 1e fa          	endbr64 
    12e4:	f2 ff 25 5d 5c 00 00 	bnd jmp *0x5c5d(%rip)        # 6f48 <signal@GLIBC_2.2.5>
    12eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000012f0 <gethostbyname@plt>:
    12f0:	f3 0f 1e fa          	endbr64 
    12f4:	f2 ff 25 55 5c 00 00 	bnd jmp *0x5c55(%rip)        # 6f50 <gethostbyname@GLIBC_2.2.5>
    12fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001300 <__memmove_chk@plt>:
    1300:	f3 0f 1e fa          	endbr64 
    1304:	f2 ff 25 4d 5c 00 00 	bnd jmp *0x5c4d(%rip)        # 6f58 <__memmove_chk@GLIBC_2.3.4>
    130b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001310 <strtol@plt>:
    1310:	f3 0f 1e fa          	endbr64 
    1314:	f2 ff 25 45 5c 00 00 	bnd jmp *0x5c45(%rip)        # 6f60 <strtol@GLIBC_2.2.5>
    131b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001320 <memcpy@plt>:
    1320:	f3 0f 1e fa          	endbr64 
    1324:	f2 ff 25 3d 5c 00 00 	bnd jmp *0x5c3d(%rip)        # 6f68 <memcpy@GLIBC_2.14>
    132b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001330 <malloc@plt>:
    1330:	f3 0f 1e fa          	endbr64 
    1334:	f2 ff 25 35 5c 00 00 	bnd jmp *0x5c35(%rip)        # 6f70 <malloc@GLIBC_2.2.5>
    133b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001340 <fflush@plt>:
    1340:	f3 0f 1e fa          	endbr64 
    1344:	f2 ff 25 2d 5c 00 00 	bnd jmp *0x5c2d(%rip)        # 6f78 <fflush@GLIBC_2.2.5>
    134b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001350 <__isoc99_sscanf@plt>:
    1350:	f3 0f 1e fa          	endbr64 
    1354:	f2 ff 25 25 5c 00 00 	bnd jmp *0x5c25(%rip)        # 6f80 <__isoc99_sscanf@GLIBC_2.7>
    135b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001360 <__printf_chk@plt>:
    1360:	f3 0f 1e fa          	endbr64 
    1364:	f2 ff 25 1d 5c 00 00 	bnd jmp *0x5c1d(%rip)        # 6f88 <__printf_chk@GLIBC_2.3.4>
    136b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001370 <fopen@plt>:
    1370:	f3 0f 1e fa          	endbr64 
    1374:	f2 ff 25 15 5c 00 00 	bnd jmp *0x5c15(%rip)        # 6f90 <fopen@GLIBC_2.2.5>
    137b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001380 <gethostname@plt>:
    1380:	f3 0f 1e fa          	endbr64 
    1384:	f2 ff 25 0d 5c 00 00 	bnd jmp *0x5c0d(%rip)        # 6f98 <gethostname@GLIBC_2.2.5>
    138b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001390 <exit@plt>:
    1390:	f3 0f 1e fa          	endbr64 
    1394:	f2 ff 25 05 5c 00 00 	bnd jmp *0x5c05(%rip)        # 6fa0 <exit@GLIBC_2.2.5>
    139b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000013a0 <connect@plt>:
    13a0:	f3 0f 1e fa          	endbr64 
    13a4:	f2 ff 25 fd 5b 00 00 	bnd jmp *0x5bfd(%rip)        # 6fa8 <connect@GLIBC_2.2.5>
    13ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000013b0 <__fprintf_chk@plt>:
    13b0:	f3 0f 1e fa          	endbr64 
    13b4:	f2 ff 25 f5 5b 00 00 	bnd jmp *0x5bf5(%rip)        # 6fb0 <__fprintf_chk@GLIBC_2.3.4>
    13bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000013c0 <sleep@plt>:
    13c0:	f3 0f 1e fa          	endbr64 
    13c4:	f2 ff 25 ed 5b 00 00 	bnd jmp *0x5bed(%rip)        # 6fb8 <sleep@GLIBC_2.2.5>
    13cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000013d0 <__ctype_b_loc@plt>:
    13d0:	f3 0f 1e fa          	endbr64 
    13d4:	f2 ff 25 e5 5b 00 00 	bnd jmp *0x5be5(%rip)        # 6fc0 <__ctype_b_loc@GLIBC_2.3>
    13db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000013e0 <__sprintf_chk@plt>:
    13e0:	f3 0f 1e fa          	endbr64 
    13e4:	f2 ff 25 dd 5b 00 00 	bnd jmp *0x5bdd(%rip)        # 6fc8 <__sprintf_chk@GLIBC_2.3.4>
    13eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000013f0 <socket@plt>:
    13f0:	f3 0f 1e fa          	endbr64 
    13f4:	f2 ff 25 d5 5b 00 00 	bnd jmp *0x5bd5(%rip)        # 6fd0 <socket@GLIBC_2.2.5>
    13fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000001400 <_start>:
    1400:	f3 0f 1e fa          	endbr64 
    1404:	31 ed                	xor    %ebp,%ebp
    1406:	49 89 d1             	mov    %rdx,%r9
    1409:	5e                   	pop    %rsi
    140a:	48 89 e2             	mov    %rsp,%rdx
    140d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1411:	50                   	push   %rax
    1412:	54                   	push   %rsp
    1413:	4c 8d 05 b6 1c 00 00 	lea    0x1cb6(%rip),%r8        # 30d0 <__libc_csu_fini>
    141a:	48 8d 0d 3f 1c 00 00 	lea    0x1c3f(%rip),%rcx        # 3060 <__libc_csu_init>
    1421:	48 8d 3d c1 00 00 00 	lea    0xc1(%rip),%rdi        # 14e9 <main>
    1428:	ff 15 b2 5b 00 00    	call   *0x5bb2(%rip)        # 6fe0 <__libc_start_main@GLIBC_2.2.5>
    142e:	f4                   	hlt    
    142f:	90                   	nop

0000000000001430 <deregister_tm_clones>:
    1430:	48 8d 3d e9 70 00 00 	lea    0x70e9(%rip),%rdi        # 8520 <stdout@GLIBC_2.2.5>
    1437:	48 8d 05 e2 70 00 00 	lea    0x70e2(%rip),%rax        # 8520 <stdout@GLIBC_2.2.5>
    143e:	48 39 f8             	cmp    %rdi,%rax
    1441:	74 15                	je     1458 <deregister_tm_clones+0x28>
    1443:	48 8b 05 8e 5b 00 00 	mov    0x5b8e(%rip),%rax        # 6fd8 <_ITM_deregisterTMCloneTable>
    144a:	48 85 c0             	test   %rax,%rax
    144d:	74 09                	je     1458 <deregister_tm_clones+0x28>
    144f:	ff e0                	jmp    *%rax
    1451:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1458:	c3                   	ret    
    1459:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001460 <register_tm_clones>:
    1460:	48 8d 3d b9 70 00 00 	lea    0x70b9(%rip),%rdi        # 8520 <stdout@GLIBC_2.2.5>
    1467:	48 8d 35 b2 70 00 00 	lea    0x70b2(%rip),%rsi        # 8520 <stdout@GLIBC_2.2.5>
    146e:	48 29 fe             	sub    %rdi,%rsi
    1471:	48 89 f0             	mov    %rsi,%rax
    1474:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1478:	48 c1 f8 03          	sar    $0x3,%rax
    147c:	48 01 c6             	add    %rax,%rsi
    147f:	48 d1 fe             	sar    %rsi
    1482:	74 14                	je     1498 <register_tm_clones+0x38>
    1484:	48 8b 05 65 5b 00 00 	mov    0x5b65(%rip),%rax        # 6ff0 <_ITM_registerTMCloneTable>
    148b:	48 85 c0             	test   %rax,%rax
    148e:	74 08                	je     1498 <register_tm_clones+0x38>
    1490:	ff e0                	jmp    *%rax
    1492:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1498:	c3                   	ret    
    1499:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000014a0 <__do_global_dtors_aux>:
    14a0:	f3 0f 1e fa          	endbr64 
    14a4:	80 3d 9d 70 00 00 00 	cmpb   $0x0,0x709d(%rip)        # 8548 <completed.8060>
    14ab:	75 2b                	jne    14d8 <__do_global_dtors_aux+0x38>
    14ad:	55                   	push   %rbp
    14ae:	48 83 3d 42 5b 00 00 	cmpq   $0x0,0x5b42(%rip)        # 6ff8 <__cxa_finalize@GLIBC_2.2.5>
    14b5:	00 
    14b6:	48 89 e5             	mov    %rsp,%rbp
    14b9:	74 0c                	je     14c7 <__do_global_dtors_aux+0x27>
    14bb:	48 8b 3d 46 5b 00 00 	mov    0x5b46(%rip),%rdi        # 7008 <__dso_handle>
    14c2:	e8 49 fd ff ff       	call   1210 <__cxa_finalize@plt>
    14c7:	e8 64 ff ff ff       	call   1430 <deregister_tm_clones>
    14cc:	c6 05 75 70 00 00 01 	movb   $0x1,0x7075(%rip)        # 8548 <completed.8060>
    14d3:	5d                   	pop    %rbp
    14d4:	c3                   	ret    
    14d5:	0f 1f 00             	nopl   (%rax)
    14d8:	c3                   	ret    
    14d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000014e0 <frame_dummy>:
    14e0:	f3 0f 1e fa          	endbr64 
    14e4:	e9 77 ff ff ff       	jmp    1460 <register_tm_clones>

00000000000014e9 <main>:
    14e9:	f3 0f 1e fa          	endbr64 
    14ed:	53                   	push   %rbx
    14ee:	83 ff 01             	cmp    $0x1,%edi
    14f1:	74 51                	je     1544 <main+0x5b>
    14f3:	48 89 f3             	mov    %rsi,%rbx
    14f6:	83 ff 02             	cmp    $0x2,%edi
    14f9:	75 7b                	jne    1576 <main+0x8d>
    14fb:	48 8b 7e 08          	mov    0x8(%rsi),%rdi
    14ff:	48 8d 35 6a 33 00 00 	lea    0x336a(%rip),%rsi        # 4870 <array.3497+0x430>
    1506:	e8 65 fe ff ff       	call   1370 <fopen@plt>
    150b:	48 89 05 3e 70 00 00 	mov    %rax,0x703e(%rip)        # 8550 <infile>
    1512:	48 85 c0             	test   %rax,%rax
    1515:	74 3d                	je     1554 <main+0x6b>
    1517:	e8 15 08 00 00       	call   1d31 <initialize_bomb>
    151c:	48 89 c3             	mov    %rax,%rbx
    151f:	81 38 11 fa 23 20    	cmpl   $0x2023fa11,(%rax)
    1525:	74 72                	je     1599 <main+0xb0>
    1527:	48 8d 35 5a 2b 00 00 	lea    0x2b5a(%rip),%rsi        # 4088 <_IO_stdin_used+0x88>
    152e:	bf 01 00 00 00       	mov    $0x1,%edi
    1533:	b8 00 00 00 00       	mov    $0x0,%eax
    1538:	e8 23 fe ff ff       	call   1360 <__printf_chk@plt>
    153d:	b8 00 00 00 00       	mov    $0x0,%eax
    1542:	5b                   	pop    %rbx
    1543:	c3                   	ret    
    1544:	48 8b 05 e5 6f 00 00 	mov    0x6fe5(%rip),%rax        # 8530 <stdin@GLIBC_2.2.5>
    154b:	48 89 05 fe 6f 00 00 	mov    %rax,0x6ffe(%rip)        # 8550 <infile>
    1552:	eb c3                	jmp    1517 <main+0x2e>
    1554:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
    1558:	48 8b 13             	mov    (%rbx),%rdx
    155b:	48 8d 35 a2 2a 00 00 	lea    0x2aa2(%rip),%rsi        # 4004 <_IO_stdin_used+0x4>
    1562:	bf 01 00 00 00       	mov    $0x1,%edi
    1567:	e8 f4 fd ff ff       	call   1360 <__printf_chk@plt>
    156c:	bf 08 00 00 00       	mov    $0x8,%edi
    1571:	e8 1a fe ff ff       	call   1390 <exit@plt>
    1576:	48 8b 16             	mov    (%rsi),%rdx
    1579:	48 8d 35 a1 2a 00 00 	lea    0x2aa1(%rip),%rsi        # 4021 <_IO_stdin_used+0x21>
    1580:	bf 01 00 00 00       	mov    $0x1,%edi
    1585:	b8 00 00 00 00       	mov    $0x0,%eax
    158a:	e8 d1 fd ff ff       	call   1360 <__printf_chk@plt>
    158f:	bf 08 00 00 00       	mov    $0x8,%edi
    1594:	e8 f7 fd ff ff       	call   1390 <exit@plt>
    1599:	48 8d 3d 28 2b 00 00 	lea    0x2b28(%rip),%rdi        # 40c8 <_IO_stdin_used+0xc8>
    15a0:	e8 cb fc ff ff       	call   1270 <puts@plt>
    15a5:	48 8d 3d 5c 2b 00 00 	lea    0x2b5c(%rip),%rdi        # 4108 <_IO_stdin_used+0x108>
    15ac:	e8 bf fc ff ff       	call   1270 <puts@plt>
    15b1:	e8 58 0b 00 00       	call   210e <read_line>
    15b6:	48 89 c7             	mov    %rax,%rdi
    15b9:	e8 da 01 00 00       	call   1798 <phase_1>
    15be:	48 89 df             	mov    %rbx,%rdi
    15c1:	e8 93 0c 00 00       	call   2259 <phase_defused>
    15c6:	48 8d 3d 7b 2b 00 00 	lea    0x2b7b(%rip),%rdi        # 4148 <_IO_stdin_used+0x148>
    15cd:	e8 9e fc ff ff       	call   1270 <puts@plt>
    15d2:	e8 37 0b 00 00       	call   210e <read_line>
    15d7:	48 89 c7             	mov    %rax,%rdi
    15da:	e8 dd 01 00 00       	call   17bc <phase_2>
    15df:	48 89 df             	mov    %rbx,%rdi
    15e2:	e8 72 0c 00 00       	call   2259 <phase_defused>
    15e7:	48 8d 3d 4d 2a 00 00 	lea    0x2a4d(%rip),%rdi        # 403b <_IO_stdin_used+0x3b>
    15ee:	e8 7d fc ff ff       	call   1270 <puts@plt>
    15f3:	e8 16 0b 00 00       	call   210e <read_line>
    15f8:	48 89 c7             	mov    %rax,%rdi
    15fb:	e8 3d 02 00 00       	call   183d <phase_3>
    1600:	48 89 df             	mov    %rbx,%rdi
    1603:	e8 51 0c 00 00       	call   2259 <phase_defused>
    1608:	48 8d 3d 49 2a 00 00 	lea    0x2a49(%rip),%rdi        # 4058 <_IO_stdin_used+0x58>
    160f:	e8 5c fc ff ff       	call   1270 <puts@plt>
    1614:	e8 f5 0a 00 00       	call   210e <read_line>
    1619:	48 89 c7             	mov    %rax,%rdi
    161c:	e8 3b 03 00 00       	call   195c <phase_4>
    1621:	48 89 df             	mov    %rbx,%rdi
    1624:	e8 30 0c 00 00       	call   2259 <phase_defused>
    1629:	48 8d 3d 48 2b 00 00 	lea    0x2b48(%rip),%rdi        # 4178 <_IO_stdin_used+0x178>
    1630:	e8 3b fc ff ff       	call   1270 <puts@plt>
    1635:	e8 d4 0a 00 00       	call   210e <read_line>
    163a:	48 89 c7             	mov    %rax,%rdi
    163d:	e8 9e 03 00 00       	call   19e0 <phase_5>
    1642:	48 89 df             	mov    %rbx,%rdi
    1645:	e8 0f 0c 00 00       	call   2259 <phase_defused>
    164a:	48 8d 3d 16 2a 00 00 	lea    0x2a16(%rip),%rdi        # 4067 <_IO_stdin_used+0x67>
    1651:	e8 1a fc ff ff       	call   1270 <puts@plt>
    1656:	e8 b3 0a 00 00       	call   210e <read_line>
    165b:	48 89 c7             	mov    %rax,%rdi
    165e:	e8 cc 03 00 00       	call   1a2f <phase_6>
    1663:	48 89 df             	mov    %rbx,%rdi
    1666:	e8 ee 0b 00 00       	call   2259 <phase_defused>
    166b:	48 89 df             	mov    %rbx,%rdi
    166e:	e8 bd fb ff ff       	call   1230 <free@plt>
    1673:	e9 c5 fe ff ff       	jmp    153d <main+0x54>

0000000000001678 <genshin>:
    1678:	f3 0f 1e fa          	endbr64 
    167c:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
    1683:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    168a:	00 00 
    168c:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
    1693:	00 
    1694:	31 c0                	xor    %eax,%eax

    1696:	48 8d 4c 24 0c       	lea    0xc(%rsp),%rcx
    169b:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
    16a0:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    16a5:	48 8d 35 f0 2a 00 00 	lea    0x2af0(%rip),%rsi        # 419c <_IO_stdin_used+0x19c>
    16ac:	48 8d 3d 15 70 00 00 	lea    0x7015(%rip),%rdi        # 86c8 <input_strings+0x168>
    16b3:	e8 98 fc ff ff       	call   1350 <__isoc99_sscanf@plt>
    16b8:	83 f8 03             	cmp    $0x3,%eax
    16bb:	74 20                	je     16dd <genshin+0x65>
    16bd:	b8 00 00 00 00       	mov    $0x0,%eax
    16c2:	48 8b b4 24 88 00 00 	mov    0x88(%rsp),%rsi
    16c9:	00 
    16ca:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
    16d1:	00 00 
    16d3:	75 2b                	jne    1700 <genshin+0x88>
    16d5:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
    16dc:	c3                   	ret    
    16dd:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
    16e2:	48 8d 35 bf 2a 00 00 	lea    0x2abf(%rip),%rsi        # 41a8 <_IO_stdin_used+0x1a8>
    16e9:	e8 f2 05 00 00       	call   1ce0 <strings_not_equal>
    16ee:	85 c0                	test   %eax,%eax
    16f0:	74 07                	je     16f9 <genshin+0x81>
    16f2:	b8 00 00 00 00       	mov    $0x0,%eax
    16f7:	eb c9                	jmp    16c2 <genshin+0x4a>
    16f9:	b8 01 00 00 00       	mov    $0x1,%eax
    16fe:	eb c2                	jmp    16c2 <genshin+0x4a>
    1700:	e8 8b fb ff ff       	call   1290 <__stack_chk_fail@plt>

0000000000001705 <qidong>:
    1705:	f3 0f 1e fa          	endbr64 
    1709:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    1710:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1717:	00 00 
    1719:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    171e:	31 c0                	xor    %eax,%eax
    1720:	48 8d 05 b1 6e 00 00 	lea    0x6eb1(%rip),%rax        # 85d8 <input_strings+0x78>
    1727:	80 38 00             	cmpb   $0x0,(%rax)
    172a:	74 06                	je     1732 <qidong+0x2d>
    172c:	48 83 c0 01          	add    $0x1,%rax
    1730:	eb f5                	jmp    1727 <qidong+0x22>
    1732:	48 83 e8 01          	sub    $0x1,%rax
    1736:	48 89 e2             	mov    %rsp,%rdx
    1739:	eb 0a                	jmp    1745 <qidong+0x40>
    173b:	88 0a                	mov    %cl,(%rdx)
    173d:	48 83 c2 01          	add    $0x1,%rdx
    1741:	48 83 e8 01          	sub    $0x1,%rax
    1745:	0f b6 08             	movzbl (%rax),%ecx
    1748:	80 f9 20             	cmp    $0x20,%cl     #空格键
    174b:	74 0c                	je     1759 <qidong+0x54>
    174d:	48 8d 35 84 6e 00 00 	lea    0x6e84(%rip),%rsi        # 85d8 <input_strings+0x78>
    1754:	48 39 f0             	cmp    %rsi,%rax
    1757:	75 e2                	jne    173b <qidong+0x36>
    1759:	c6 02 00             	movb   $0x0,(%rdx)
    175c:	48 89 e7             	mov    %rsp,%rdi
    175f:	48 8d 35 6a 2a 00 00 	lea    0x2a6a(%rip),%rsi        # 41d0 <_IO_stdin_used+0x1d0>
    1766:	e8 75 05 00 00       	call   1ce0 <strings_not_equal>
    176b:	85 c0                	test   %eax,%eax
    176d:	74 1d                	je     178c <qidong+0x87>
    176f:	b8 00 00 00 00       	mov    $0x0,%eax
    1774:	48 8b 7c 24 78       	mov    0x78(%rsp),%rdi
    1779:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
    1780:	00 00 
    1782:	75 0f                	jne    1793 <qidong+0x8e>
    1784:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
    178b:	c3                   	ret    
    178c:	b8 01 00 00 00       	mov    $0x1,%eax
    1791:	eb e1                	jmp    1774 <qidong+0x6f>
    1793:	e8 f8 fa ff ff       	call   1290 <__stack_chk_fail@plt>

0000000000001798 <phase_1>:
    1798:	f3 0f 1e fa          	endbr64 
    179c:	48 83 ec 08          	sub    $0x8,%rsp
    17a0:	48 8d 35 59 2a 00 00 	lea    0x2a59(%rip),%rsi        # 4200 <_IO_stdin_used+0x200>
    17a7:	e8 34 05 00 00       	call   1ce0 <strings_not_equal>
    17ac:	85 c0                	test   %eax,%eax
    17ae:	75 05                	jne    17b5 <phase_1+0x1d>
    17b0:	48 83 c4 08          	add    $0x8,%rsp
    17b4:	c3                   	ret    
    17b5:	e8 89 08 00 00       	call   2043 <explode_bomb>
    17ba:	eb f4                	jmp    17b0 <phase_1+0x18>

00000000000017bc <phase_2>: #display/i $pc
    17bc:	f3 0f 1e fa          	endbr64 
    17c0:	53                   	push   %rbx
    17c1:	48 83 ec 20          	sub    $0x20,%rsp
    17c5:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    17cc:	00 00 
    17ce:	48 89 44 24 18       	mov    %rax,0x18(%rsp) #金丝雀值，防止栈溢出
    17d3:	31 c0                	xor    %eax,%eax
    17d5:	48 89 e6             	mov    %rsp,%rsi #第二个参数是rsp
    17d8:	e8 ec 08 00 00       	call   20c9 <read_six_numbers>
    17dd:	83 3c 24 00          	cmpl   $0x0,(%rsp)
    17e1:	75 07                	jne    17ea <phase_2+0x2e>
    17e3:	83 7c 24 04 01       	cmpl   $0x1,0x4(%rsp)
    17e8:	74 05                	je     17ef <phase_2+0x33>
    17ea:	e8 54 08 00 00       	call   2043 <explode_bomb>
    17ef:	bb 02 00 00 00       	mov    $0x2,%ebx #rbx=2
    17f4:	eb 08                	jmp    17fe <phase_2+0x42> 
    17f6:	e8 48 08 00 00       	call   2043 <explode_bomb>
    17fb:	83 c3 01             	add    $0x1,%ebx                                    rbx=3           rbx=4           rbx=5
    17fe:	83 fb 05             	cmp    $0x5,%ebx #比较rbx:5
    1801:	7f 1f                	jg     1822 <phase_2+0x66>  
    1803:	48 63 c3             	movslq %ebx,%rax                    #rax=2;         rax=3           rax=4           rax=5
    1806:	8d 53 fe             	lea    -0x2(%rbx),%edx                      
    1809:	48 63 d2             	movslq %edx,%rdx                    #rdx=0;         rdx=1           rdx=2           rdx=3
    180c:	8b 0c 94             	mov    (%rsp,%rdx,4),%ecx           #rcx=0;         rcx=1           rcx=1           rcx=3
    180f:	8d 53 ff             	lea    -0x1(%rbx),%edx 
    1812:	48 63 d2             	movslq %edx,%rdx                    #rdx=1;         rdx=2           rdx=3           rdx=4
    1815:	8b 14 94             	mov    (%rsp,%rdx,4),%edx           #rdx=1;         rdx=1           rdx=3           rdx=5
    1818:	8d 14 4a             	lea    (%rdx,%rcx,2),%edx           #rdx=1;         rdx=3           rdx=5           rdx=11  
    181b:	39 14 84             	cmp    %edx,(%rsp,%rax,4)           #(%rsp+0x8):1   (%rsp+0xc):3    (%rsp+0x10):5   (%rsp+0x14):11
    181e:	74 db                	je     17fb <phase_2+0x3f>
    1820:	eb d4                	jmp    17f6 <phase_2+0x3a>
    1822:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    1827:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    182e:	00 00 
    1830:	75 06                	jne    1838 <phase_2+0x7c>
    1832:	48 83 c4 20          	add    $0x20,%rsp
    1836:	5b                   	pop    %rbx
    1837:	c3                   	ret    
    1838:	e8 53 fa ff ff       	call   1290 <__stack_chk_fail@plt>

000000000000183d <phase_3>:
    183d:	f3 0f 1e fa          	endbr64 
    1841:	48 83 ec 18          	sub    $0x18,%rsp
    1845:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax                                            #栈溢出检测
    184c:	00 00 
    184e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    1853:	31 c0                	xor    %eax,%eax                                                #rax=0
    1855:	48 8d 4c 24 04       	lea    0x4(%rsp),%rcx                                           #rcx=rsp+4
    185a:	48 89 e2             	mov    %rsp,%rdx                                                #rdx=rsp
    185d:	48 8d 35 6e 2f 00 00 	lea    0x2f6e(%rip),%rsi        # 47d2 <array.3497+0x392>       #rsi=rip+0x2f6e   "%d %d"
    1864:	e8 e7 fa ff ff       	call   1350 <__isoc99_sscanf@plt>                               #read 2 numbers
    1869:	83 f8 01             	cmp    $0x1,%eax                                                #rax:1 (rax=2)
    186c:	7e 1f                	jle    188d <phase_3+0x50>                                                                           
    186e:	8b 04 24             	mov    (%rsp),%eax                                              #rax=(rsp) (输入的第一个数)
    1871:	83 f8 07             	cmp    $0x7,%eax                                                #rax:7
    1874:	0f 87 8c 00 00 00    	ja     1906 <phase_3+0xc9>                                      #rax<=7
    187a:	89 c0                	mov    %eax,%eax                                                #rax=rax
    187c:	48 8d 15 9d 2b 00 00 	lea    0x2b9d(%rip),%rdx        # 4420 <_IO_stdin_used+0x420>   #rdx=rip+0x2b9d -> -11148
    1883:	48 63 04 82          	movslq (%rdx,%rax,4),%rax                                       #rax=(rdx+4rax)
    1887:	48 01 d0             	add    %rdx,%rax                                                #rax=rax+rdx
    188a:	3e ff e0             	notrack jmp *%rax
    188d:	e8 b1 07 00 00       	call   2043 <explode_bomb>
    1892:	eb da                	jmp    186e <phase_3+0x31>
    1894:	8b 44 24 04          	mov    0x4(%rsp),%eax                                           #rax=(rsp+0x4) (输入的第二个数)
    1898:	05 cf 02 00 00       	add    $0x2cf,%eax
    189d:	3d 82 06 00 00       	cmp    $0x682,%eax                                              #rax:0x682
    18a2:	75 71                	jne    1915 <phase_3+0xd8>                                      #rax==0x682   输入的第二个数是0x590?
    18a4:	48 8b 44 24 08       	mov    0x8(%rsp),%rax                                           
    18a9:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    18b0:	00 00 
    18b2:	75 68                	jne    191c <phase_3+0xdf>
    18b4:	48 83 c4 18          	add    $0x18,%rsp
    18b8:	c3                   	ret    
    18b9:	8b 44 24 04          	mov    0x4(%rsp),%eax                                           #rax=(rsp+0x4) (输入的第二个数)
    18bd:	05 f2 00 00 00       	add    $0xf2,%eax                                               #rax=rax+0xf2
    18c2:	eb d9                	jmp    189d <phase_3+0x60>
    18c4:	8b 44 24 04          	mov    0x4(%rsp),%eax
    18c8:	05 04 01 00 00       	add    $0x104,%eax
    18cd:	eb ce                	jmp    189d <phase_3+0x60>
    18cf:	8b 44 24 04          	mov    0x4(%rsp),%eax
    18d3:	05 78 01 00 00       	add    $0x178,%eax
    18d8:	eb c3                	jmp    189d <phase_3+0x60>
    18da:	8b 44 24 04          	mov    0x4(%rsp),%eax
    18de:	05 9b 01 00 00       	add    $0x19b,%eax
    18e3:	eb b8                	jmp    189d <phase_3+0x60>
    18e5:	8b 44 24 04          	mov    0x4(%rsp),%eax
    18e9:	05 ad 01 00 00       	add    $0x1ad,%eax
    18ee:	eb ad                	jmp    189d <phase_3+0x60>
    18f0:	8b 44 24 04          	mov    0x4(%rsp),%eax
    18f4:	05 41 03 00 00       	add    $0x341,%eax
    18f9:	eb a2                	jmp    189d <phase_3+0x60>
    18fb:	8b 44 24 04          	mov    0x4(%rsp),%eax
    18ff:	05 ce 00 00 00       	add    $0xce,%eax
    1904:	eb 97                	jmp    189d <phase_3+0x60>
    1906:	e8 38 07 00 00       	call   2043 <explode_bomb>
    190b:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    1910:	e8 7b fa ff ff       	call   1390 <exit@plt>
    1915:	e8 29 07 00 00       	call   2043 <explode_bomb>
    191a:	eb 88                	jmp    18a4 <phase_3+0x67>
    191c:	e8 6f f9 ff ff       	call   1290 <__stack_chk_fail@plt>

0000000000001921 <func4>:                                               #func4(x)=func4(x-2)+2*func4(x-1)
    1921:	f3 0f 1e fa          	endbr64 
    1925:	85 ff                	test   %edi,%edi                                            #rdi=0          rdi=1           rdi=2,rdi=1
    1927:	7e 29                	jle    1952 <func4+0x31>                                    #rdi<=0         
    1929:	55                   	push   %rbp                                                                 
    192a:	53                   	push   %rbx
    192b:	48 83 ec 08          	sub    $0x8,%rsp                                                            rsp=rsp-8       
    192f:	89 fb                	mov    %edi,%ebx                                                            rbx=1           rbx=2
    1931:	83 ff 01             	cmp    $0x1,%edi                                                            rdi:1           
    1934:	74 22                	je     1958 <func4+0x37>                                                 
    1936:	8d 7f ff             	lea    -0x1(%rdi),%edi                                                                      rdi=1
    1939:	e8 e3 ff ff ff       	call   1921 <func4>                                                                         rax=1
    193e:	8d 2c 00             	lea    (%rax,%rax,1),%ebp                                                                   rbp=2
    1941:	8d 7b fe             	lea    -0x2(%rbx),%edi                                                                      rdi=0
    1944:	e8 d8 ff ff ff       	call   1921 <func4>                                                                         rax=0
    1949:	01 e8                	add    %ebp,%eax                                                                            rax=2
    194b:	48 83 c4 08          	add    $0x8,%rsp
    194f:	5b                   	pop    %rbx
    1950:	5d                   	pop    %rbp
    1951:	c3                   	ret                                                                                         rax=2
    1952:	b8 00 00 00 00       	mov    $0x0,%eax                                            #rax=0
    1957:	c3                   	ret    
    1958:	89 f8                	mov    %edi,%eax                                                            rax=1
    195a:	eb ef                	jmp    194b <func4+0x2a>

000000000000195c <phase_4>:
    195c:	f3 0f 1e fa          	endbr64
    1960:	55                   	push   %rbp                                                 #被调用者保存
    1961:	53                   	push   %rbx                                                 #被调用者保存
    1962:	48 83 ec 18          	sub    $0x18,%rsp
    1966:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax                                        #栈溢出检测
    196d:	00 00 
    196f:	48 89 44 24 08       	mov    %rax,0x8(%rsp)                                       #(rsp+8)=rax                                       
    1974:	31 c0                	xor    %eax,%eax                                            #rax=0
    1976:	48 8d 4c 24 04       	lea    0x4(%rsp),%rcx                                       #rcx=(rsp+4) 
    197b:	48 89 e2             	mov    %rsp,%rdx                                            #rdx=rsp
    197e:	48 8d 35 4d 2e 00 00 	lea    0x2e4d(%rip),%rsi        # 47d2 <array.3497+0x392>   #rsi=rip+0x2e4d
    1985:	e8 c6 f9 ff ff       	call   1350 <__isoc99_sscanf@plt>                           #输入两个整数
    198a:	83 f8 02             	cmp    $0x2,%eax                                            #rax:2
    198d:	75 06                	jne    1995 <phase_4+0x39>                                  #rax==2
    198f:	83 3c 24 04          	cmpl   $0x4,(%rsp)                                          #(rsp):4 第一个数是4
    1993:	74 05                	je     199a <phase_4+0x3e>
    1995:	e8 a9 06 00 00       	call   2043 <explode_bomb>
    199a:	bd 00 00 00 00       	mov    $0x0,%ebp                                            #rbp=0
    199f:	bb 00 00 00 00       	mov    $0x0,%ebx                                            #rbx=0
    19a4:	39 1c 24             	cmp    %ebx,(%rsp)                                          #(rsp):0            (rsp):1             (rsp):2         (rsp):3         (rsp):4
    19a7:	7e 0e                	jle    19b7 <phase_4+0x5b>
    19a9:	89 df                	mov    %ebx,%edi                                            #rdi=rbx (0)        rdi=rbx(1)          rdi=2           rdi=3
    19ab:	e8 71 ff ff ff       	call   1921 <func4>                                         #rax=0              rax=1               rax=2           rax=5
    19b0:	01 c5                	add    %eax,%ebp                                            #rbp=0              rbp=1               rbp=3           rbp=8
    19b2:	83 c3 01             	add    $0x1,%ebx                                            #rbx=1              rbx=2               rbx=3           rbx=4
    19b5:	eb ed                	jmp    19a4 <phase_4+0x48>                                                                                                          
    19b7:	39 6c 24 04          	cmp    %ebp,0x4(%rsp)                                                                                                               (rsp+0x4):rbp  第二个数是8                                               
    19bb:	75 17                	jne    19d4 <phase_4+0x78>                                                      
    19bd:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    19c2:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    19c9:	00 00 
    19cb:	75 0e                	jne    19db <phase_4+0x7f>
    19cd:	48 83 c4 18          	add    $0x18,%rsp
    19d1:	5b                   	pop    %rbx
    19d2:	5d                   	pop    %rbp
    19d3:	c3                   	ret    
    19d4:	e8 6a 06 00 00       	call   2043 <explode_bomb>
    19d9:	eb e2                	jmp    19bd <phase_4+0x61>
    19db:	e8 b0 f8 ff ff       	call   1290 <__stack_chk_fail@plt>

00000000000019e0 <phase_5>:
    19e0:	f3 0f 1e fa          	endbr64 
    19e4:	53                   	push   %rbx
    19e5:	48 89 fb             	mov    %rdi,%rbx                                        #rbx->"xxxxxx" 543210 小端法
    19e8:	e8 db 02 00 00       	call   1cc8 <string_length>
    19ed:	83 f8 06             	cmp    $0x6,%eax                                        #eax:6 输入字符串长度为6
    19f0:	75 28                	jne    1a1a <phase_5+0x3a>
    19f2:	b9 00 00 00 00       	mov    $0x0,%ecx                                        #rcx=0
    19f7:	b8 00 00 00 00       	mov    $0x0,%eax                                        #rax=0
    19fc:	83 f8 05             	cmp    $0x5,%eax                                        #rax:0x5                            rax:0x5         ...     rax:0x5
    19ff:	7f 20                	jg     1a21 <phase_5+0x41>       
    1a01:	48 63 d0             	movslq %eax,%rdx                                        #rdx=rax(0)                         rdx=rax(1)      ...     rdx=rax(5)
    1a04:	0f b6 14 13          	movzbl (%rbx,%rdx,1),%edx                               #rdx=(rbx+rdx(0))=(rbx)             rdx=(rbx+1)     ...     rdx=(rbx+5)
    1a08:	83 e2 0f             	and    $0xf,%edx                                        #rdx=rdx&0xf                        rdx=rdx&0xf     ...     rdx=rdx&0xf (mod 16)
    1a0b:	48 8d 35 2e 2a 00 00 	lea    0x2a2e(%rip),%rsi        # 4440 <array.3497>     #rsi=rip+0x2a2e=0x5611cf038440->2   
    1a12:	03 0c 96             	add    (%rsi,%rdx,4),%ecx                               #rcx=rcx+(rsi+4*rdx)                rcx=rcx+(rsi+4*rdx) ... rcx=rcx+(rsi+4*rdx)
    1a15:	83 c0 01             	add    $0x1,%eax                                        #rax=1                              rax=2           ...     rax=6
    1a18:	eb e2                	jmp    19fc <phase_5+0x1c>                              
    1a1a:	e8 24 06 00 00       	call   2043 <explode_bomb>
    1a1f:	eb d1                	jmp    19f2 <phase_5+0x12>
    1a21:	83 f9 2f             	cmp    $0x2f,%ecx                                       #rcx:0x2f   ==
    1a24:	75 02                	jne    1a28 <phase_5+0x48>
    1a26:	5b                   	pop    %rbx
    1a27:	c3                   	ret    
    1a28:	e8 16 06 00 00       	call   2043 <explode_bomb>
    1a2d:	eb f7                	jmp    1a26 <phase_5+0x46>

0000000000001a2f <phase_6>:
    1a2f:	f3 0f 1e fa          	endbr64 
    1a33:	41 54                	push   %r12
    1a35:	55                   	push   %rbp
    1a36:	53                   	push   %rbx
    1a37:	48 83 ec 60          	sub    $0x60,%rsp
    1a3b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1a42:	00 00 
    1a44:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    1a49:	31 c0                	xor    %eax,%eax                                        #eax=0
    1a4b:	48 89 e6             	mov    %rsp,%rsi                                        #rsi=rsp
    1a4e:	e8 76 06 00 00       	call   20c9 <read_six_numbers>                          
    1a53:	bd 00 00 00 00       	mov    $0x0,%ebp                                        #rbp=0
    1a58:	eb 27                	jmp    1a81 <phase_6+0x52>
    1a5a:	e8 e4 05 00 00       	call   2043 <explode_bomb>
    1a5f:	eb 33                	jmp    1a94 <phase_6+0x65>
    1a61:	83 c3 01             	add    $0x1,%ebx                                                                                                                    #rbx=rbx(1)+1  ...   rbx=5          rbx=6
    1a64:	83 fb 05             	cmp    $0x5,%ebx                                                                            #rbx(1):5                               rbx(2):5                                         
    1a67:	7f 15                	jg     1a7e <phase_6+0x4f>
    1a69:	48 63 c5             	movslq %ebp,%rax                                                                            #rax=rbp(0)                             rax=0     
    1a6c:	48 63 d3             	movslq %ebx,%rdx                                                                            #rdx=rbx(1)                             rdx=2                rdx=5
    1a6f:	8b 3c 94             	mov    (%rsp,%rdx,4),%edi                                                                   #rdi=(rsp+4*rdx(1)) 输入的第二个数        rdi=第三个数           rdi=第六个数
    1a72:	39 3c 84             	cmp    %edi,(%rsp,%rax,4)                                                                   #(rsp+4*rax(0)):rdi                     第一个数：第三个数
    1a75:	75 ea                	jne    1a61 <phase_6+0x32>                                                                  #第一个数和第二个数不等                     和第三个数不等   ...和第六个数不等      
    1a77:	e8 c7 05 00 00       	call   2043 <explode_bomb>
    1a7c:	eb e3                	jmp    1a61 <phase_6+0x32>
    1a7e:	44 89 e5             	mov    %r12d,%ebp                                                                                                                                                       rbp=r12d(1)               ...   rbp=6                                             
    1a81:	83 fd 05             	cmp    $0x5,%ebp                                        #rbp(0):5
    1a84:	7f 17                	jg     1a9d <phase_6+0x6e>
    1a86:	48 63 c5             	movslq %ebp,%rax                                        #rax=rbp(0)                                                                                                     rax=1
    1a89:	8b 04 84             	mov    (%rsp,%rax,4),%eax                               #eax=(rsp+4*rax(0)) 输入的第一个数                                                                                eax=输入的第二个数
    1a8c:	83 e8 01             	sub    $0x1,%eax                                        #eax=eax-1
    1a8f:	83 f8 05             	cmp    $0x5,%eax                                        #eax:5
    1a92:	77 c6                	ja     1a5a <phase_6+0x2b>                              #eax<=6       第一个数小于等于6（且为正数）                                                                       第二个数小于等于6     ...
    1a94:	44 8d 65 01          	lea    0x1(%rbp),%r12d                                  #r12d=rbp(0)+1                                                                                                 r12d=2
    1a98:	44 89 e3             	mov    %r12d,%ebx                                       #rbx=r12d(1)                                                                                                    rbx=2
    1a9b:	eb c7                	jmp    1a64 <phase_6+0x35>

    1a9d:	be 00 00 00 00       	mov    $0x0,%esi                                                                                                                                                                                        rsi=0;
    1aa2:	eb 08                	jmp    1aac <phase_6+0x7d>
    1aa4:	48 89 54 cc 20       	mov    %rdx,0x20(%rsp,%rcx,8)                                                                                                                                                                                                                       case<=: 
    1aa9:	83 c6 01             	add    $0x1,%esi
    1aac:	83 fe 05             	cmp    $0x5,%esi                                                                                                                                                                                        rsi:5;
    1aaf:	7f 1d                	jg     1ace <phase_6+0x9f>
    1ab1:	b8 01 00 00 00       	mov    $0x1,%eax                                                                                                                                                                                        rax=1;
    1ab6:	48 8d 15 53 66 00 00 	lea    0x6653(%rip),%rdx        # 8110 <node1>                                                                                                                                                          rdx=rip+0x6653
    1abd:	48 63 ce             	movslq %esi,%rcx                                                                                                                                                                                        rcx=rsi(0)                              rcx=0
    1ac0:	39 04 8c             	cmp    %eax,(%rsp,%rcx,4)                                                                                                                                                                               (rsp+4*rcx(0))第一个数:rax(1)            第一个数:2
    1ac3:	7e df                	jle    1aa4 <phase_6+0x75>                                                                                                                                                                             
    1ac5:	48 8b 52 08          	mov    0x8(%rdx),%rdx                                                                                                                                                                                                                               case>:      rdx=rdx+8;
    1ac9:	83 c0 01             	add    $0x1,%eax                                                                                                                                                                                                                                                rax=rax(1)+1;
    1acc:	eb ef                	jmp    1abd <phase_6+0x8e>

    1ace:	48 8b 5c 24 20       	mov    0x20(%rsp),%rbx                                 #rbx=&node n1                    单向链表
    1ad3:	48 89 d9             	mov    %rbx,%rcx                                       #rcx=rbx
    1ad6:	b8 01 00 00 00       	mov    $0x1,%eax                                       #rax=1
    1adb:	eb 12                	jmp    1aef <phase_6+0xc0>                      
    1add:	48 63 d0             	movslq %eax,%rdx                                                        #rdx=rax(1)
    1ae0:	48 8b 54 d4 20       	mov    0x20(%rsp,%rdx,8),%rdx                                           #rdx=(rsp+8*rdx+20)=&node n2
    1ae5:	48 89 51 08          	mov    %rdx,0x8(%rcx)                                                   #(rcx+8)=rdx;
    1ae9:	83 c0 01             	add    $0x1,%eax                                                        #rax=2
    1aec:	48 89 d1             	mov    %rdx,%rcx                                                        #rcx=rdx
    1aef:	83 f8 05             	cmp    $0x5,%eax                                       #rax:5
    1af2:	7e e9                	jle    1add <phase_6+0xae>
    1af4:	48 c7 41 08 00 00 00 	movq   $0x0,0x8(%rcx)
    1afb:	00 
    1afc:	bd 00 00 00 00       	mov    $0x0,%ebp                                       #rbp=0
    1b01:	eb 07                	jmp    1b0a <phase_6+0xdb>                             
    1b03:	48 8b 5b 08          	mov    0x8(%rbx),%rbx                                                                   rbx=&node2
    1b07:	83 c5 01             	add    $0x1,%ebp                                                                        rbp=1
    1b0a:	83 fd 04             	cmp    $0x4,%ebp                                       #rbp:4
    1b0d:	7f 11                	jg     1b20 <phase_6+0xf1>
    1b0f:	48 8b 43 08          	mov    0x8(%rbx),%rax                                  #rax=(rbx+8)=&node n2
    1b13:	8b 00                	mov    (%rax),%eax                                     #rax=node n2.val   //坑eax
    1b15:	39 03                	cmp    %eax,(%rbx)                                     #node n1.val:node n2.val
    1b17:	7d ea                	jge    1b03 <phase_6+0xd4>                             #node n1.val>=node n2.val
    1b19:	e8 25 05 00 00       	call   2043 <explode_bomb>
    1b1e:	eb e3                	jmp    1b03 <phase_6+0xd4>

    1b20:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
    1b25:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    1b2c:	00 00 
    1b2e:	75 09                	jne    1b39 <phase_6+0x10a>
    1b30:	48 83 c4 60          	add    $0x60,%rsp
    1b34:	5b                   	pop    %rbx
    1b35:	5d                   	pop    %rbp
    1b36:	41 5c                	pop    %r12
    1b38:	c3                   	ret    
    1b39:	e8 52 f7 ff ff       	call   1290 <__stack_chk_fail@plt>

0000000000001b3e <get_sum>:
    1b3e:	f3 0f 1e fa          	endbr64 
    1b42:	55                   	push   %rbp
    1b43:	53                   	push   %rbx
    1b44:	48 83 ec 08          	sub    $0x8,%rsp
    1b48:	48 89 fb             	mov    %rdi,%rbx
    1b4b:	8b 47 10             	mov    0x10(%rdi),%eax
    1b4e:	85 c0                	test   %eax,%eax
    1b50:	74 11                	je     1b63 <get_sum+0x25>
    1b52:	83 f8 01             	cmp    $0x1,%eax
    1b55:	74 13                	je     1b6a <get_sum+0x2c>
    1b57:	83 f8 02             	cmp    $0x2,%eax
    1b5a:	74 1b                	je     1b77 <get_sum+0x39>
    1b5c:	48 83 c4 08          	add    $0x8,%rsp
    1b60:	5b                   	pop    %rbx
    1b61:	5d                   	pop    %rbp
    1b62:	c3                   	ret    
    1b63:	8b 47 08             	mov    0x8(%rdi),%eax
    1b66:	03 07                	add    (%rdi),%eax
    1b68:	eb f2                	jmp    1b5c <get_sum+0x1e>
    1b6a:	48 8b 3f             	mov    (%rdi),%rdi
    1b6d:	e8 cc ff ff ff       	call   1b3e <get_sum>
    1b72:	03 43 08             	add    0x8(%rbx),%eax
    1b75:	eb e5                	jmp    1b5c <get_sum+0x1e>
    1b77:	48 8b 3f             	mov    (%rdi),%rdi
    1b7a:	e8 bf ff ff ff       	call   1b3e <get_sum>
    1b7f:	89 c5                	mov    %eax,%ebp
    1b81:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    1b85:	e8 b4 ff ff ff       	call   1b3e <get_sum>
    1b8a:	01 e8                	add    %ebp,%eax
    1b8c:	eb ce                	jmp    1b5c <get_sum+0x1e>

0000000000001b8e <secret_phase>:
    1b8e:	f3 0f 1e fa          	endbr64 
    1b92:	53                   	push   %rbx
    1b93:	48 83 ec 10          	sub    $0x10,%rsp
    1b97:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1b9e:	00 00 
    1ba0:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    1ba5:	31 c0                	xor    %eax,%eax

    1ba7:	e8 62 05 00 00       	call   210e <read_line>
    1bac:	48 89 c7             	mov    %rax,%rdi                #第一个参数 &"63"
    1baf:	ba 0a 00 00 00       	mov    $0xa,%edx                #第三个参数
    1bb4:	be 00 00 00 00       	mov    $0x0,%esi                #第二个参数
    1bb9:	e8 52 f7 ff ff       	call   1310 <strtol@plt>
    1bbe:	48 89 c3             	mov    %rax,%rbx
    1bc1:	48 8d 3d e8 64 00 00 	lea    0x64e8(%rip),%rdi        #80b0 <n1>    #第一个参数
    1bc8:	e8 71 ff ff ff       	call   1b3e <get_sum>           #rax=63
    1bcd:	39 d8                	cmp    %ebx,%eax                #rbx=63
    1bcf:	75 5c                	jne    1c2d <secret_phase+0x9f>
    1bd1:	48 8d 3d a0 26 00 00 	lea    0x26a0(%rip),%rdi        # 4278 <_IO_stdin_used+0x278>
    1bd8:	e8 93 f6 ff ff       	call   1270 <puts@plt>
    1bdd:	48 8d 3d e4 26 00 00 	lea    0x26e4(%rip),%rdi        # 42c8 <_IO_stdin_used+0x2c8>
    1be4:	e8 87 f6 ff ff       	call   1270 <puts@plt>
    1be9:	48 8d 3d 20 27 00 00 	lea    0x2720(%rip),%rdi        # 4310 <_IO_stdin_used+0x310>
    1bf0:	e8 7b f6 ff ff       	call   1270 <puts@plt>
    1bf5:	48 8d 3d 4c 27 00 00 	lea    0x274c(%rip),%rdi        # 4348 <_IO_stdin_used+0x348>
    1bfc:	e8 6f f6 ff ff       	call   1270 <puts@plt>
    1c01:	48 8d 3d b0 27 00 00 	lea    0x27b0(%rip),%rdi        # 43b8 <_IO_stdin_used+0x3b8>
    1c08:	e8 63 f6 ff ff       	call   1270 <puts@plt>
    1c0d:	48 8d 7c 24 04       	lea    0x4(%rsp),%rdi
    1c12:	e8 42 06 00 00       	call   2259 <phase_defused>
    1c17:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    1c1c:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    1c23:	00 00 
    1c25:	75 0d                	jne    1c34 <secret_phase+0xa6>
    1c27:	48 83 c4 10          	add    $0x10,%rsp
    1c2b:	5b                   	pop    %rbx
    1c2c:	c3                   	ret    
    1c2d:	e8 11 04 00 00       	call   2043 <explode_bomb>
    1c32:	eb 9d                	jmp    1bd1 <secret_phase+0x43>
    1c34:	e8 57 f6 ff ff       	call   1290 <__stack_chk_fail@plt>

0000000000001c39 <sig_handler>:
    1c39:	f3 0f 1e fa          	endbr64 
    1c3d:	50                   	push   %rax
    1c3e:	58                   	pop    %rax
    1c3f:	48 83 ec 08          	sub    $0x8,%rsp
    1c43:	48 8d 3d 36 28 00 00 	lea    0x2836(%rip),%rdi        # 4480 <array.3497+0x40>
    1c4a:	e8 21 f6 ff ff       	call   1270 <puts@plt>
    1c4f:	bf 03 00 00 00       	mov    $0x3,%edi
    1c54:	e8 67 f7 ff ff       	call   13c0 <sleep@plt>
    1c59:	48 8d 35 eb 2a 00 00 	lea    0x2aeb(%rip),%rsi        # 474b <array.3497+0x30b>
    1c60:	bf 01 00 00 00       	mov    $0x1,%edi
    1c65:	b8 00 00 00 00       	mov    $0x0,%eax
    1c6a:	e8 f1 f6 ff ff       	call   1360 <__printf_chk@plt>
    1c6f:	48 8b 3d aa 68 00 00 	mov    0x68aa(%rip),%rdi        # 8520 <stdout@GLIBC_2.2.5>
    1c76:	e8 c5 f6 ff ff       	call   1340 <fflush@plt>
    1c7b:	bf 01 00 00 00       	mov    $0x1,%edi
    1c80:	e8 3b f7 ff ff       	call   13c0 <sleep@plt>
    1c85:	48 8d 3d c7 2a 00 00 	lea    0x2ac7(%rip),%rdi        # 4753 <array.3497+0x313>
    1c8c:	e8 df f5 ff ff       	call   1270 <puts@plt>
    1c91:	bf 10 00 00 00       	mov    $0x10,%edi
    1c96:	e8 f5 f6 ff ff       	call   1390 <exit@plt>

0000000000001c9b <invalid_phase>:
    1c9b:	f3 0f 1e fa          	endbr64 
    1c9f:	50                   	push   %rax
    1ca0:	58                   	pop    %rax
    1ca1:	48 83 ec 08          	sub    $0x8,%rsp
    1ca5:	48 89 fa             	mov    %rdi,%rdx
    1ca8:	48 8d 35 ac 2a 00 00 	lea    0x2aac(%rip),%rsi        # 475b <array.3497+0x31b>
    1caf:	bf 01 00 00 00       	mov    $0x1,%edi
    1cb4:	b8 00 00 00 00       	mov    $0x0,%eax
    1cb9:	e8 a2 f6 ff ff       	call   1360 <__printf_chk@plt>
    1cbe:	bf 08 00 00 00       	mov    $0x8,%edi
    1cc3:	e8 c8 f6 ff ff       	call   1390 <exit@plt>

0000000000001cc8 <string_length>:
    1cc8:	f3 0f 1e fa          	endbr64 
    1ccc:	b8 00 00 00 00       	mov    $0x0,%eax
    1cd1:	80 3f 00             	cmpb   $0x0,(%rdi)
    1cd4:	74 09                	je     1cdf <string_length+0x17>
    1cd6:	48 83 c7 01          	add    $0x1,%rdi
    1cda:	83 c0 01             	add    $0x1,%eax
    1cdd:	eb f2                	jmp    1cd1 <string_length+0x9>
    1cdf:	c3                   	ret    

0000000000001ce0 <strings_not_equal>:
    1ce0:	f3 0f 1e fa          	endbr64 
    1ce4:	41 54                	push   %r12
    1ce6:	55                   	push   %rbp
    1ce7:	53                   	push   %rbx
    1ce8:	48 89 fb             	mov    %rdi,%rbx
    1ceb:	48 89 f5             	mov    %rsi,%rbp
    1cee:	e8 d5 ff ff ff       	call   1cc8 <string_length>
    1cf3:	41 89 c4             	mov    %eax,%r12d
    1cf6:	48 89 ef             	mov    %rbp,%rdi
    1cf9:	e8 ca ff ff ff       	call   1cc8 <string_length>
    1cfe:	41 39 c4             	cmp    %eax,%r12d                                                           #比较两个字符串长度
    1d01:	75 1d                	jne    1d20 <strings_not_equal+0x40>
    1d03:	0f b6 03             	movzbl (%rbx),%eax
    1d06:	84 c0                	test   %al,%al
    1d08:	74 0f                	je     1d19 <strings_not_equal+0x39>                                        #第一个输入的串到头，而两串长度相同，故两串相同
    1d0a:	38 45 00             	cmp    %al,0x0(%rbp)                                                        #比较两个串的第i个字节
    1d0d:	75 1b                	jne    1d2a <strings_not_equal+0x4a>
    1d0f:	48 83 c3 01          	add    $0x1,%rbx
    1d13:	48 83 c5 01          	add    $0x1,%rbp
    1d17:	eb ea                	jmp    1d03 <strings_not_equal+0x23>                                        #循环，逐字节比较
    1d19:	b8 00 00 00 00       	mov    $0x0,%eax                                                            #两串相同
    1d1e:	eb 05                	jmp    1d25 <strings_not_equal+0x45>
    1d20:	b8 01 00 00 00       	mov    $0x1,%eax
    1d25:	5b                   	pop    %rbx
    1d26:	5d                   	pop    %rbp
    1d27:	41 5c                	pop    %r12
    1d29:	c3                   	ret    
    1d2a:	b8 01 00 00 00       	mov    $0x1,%eax
    1d2f:	eb f4                	jmp    1d25 <strings_not_equal+0x45>

0000000000001d31 <initialize_bomb>:
    1d31:	f3 0f 1e fa          	endbr64 
    1d35:	55                   	push   %rbp
    1d36:	53                   	push   %rbx
    1d37:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    1d3e:	48 83 0c 24 00       	orq    $0x0,(%rsp)
    1d43:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    1d4a:	48 83 0c 24 00       	orq    $0x0,(%rsp)
    1d4f:	48 83 ec 58          	sub    $0x58,%rsp
    1d53:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1d5a:	00 00 
    1d5c:	48 89 84 24 48 20 00 	mov    %rax,0x2048(%rsp)
    1d63:	00 
    1d64:	31 c0                	xor    %eax,%eax
    1d66:	48 8d 35 cc fe ff ff 	lea    -0x134(%rip),%rsi        # 1c39 <sig_handler>
    1d6d:	bf 02 00 00 00       	mov    $0x2,%edi
    1d72:	e8 69 f5 ff ff       	call   12e0 <signal@plt>
    1d77:	48 89 e7             	mov    %rsp,%rdi
    1d7a:	be 40 00 00 00       	mov    $0x40,%esi
    1d7f:	e8 fc f5 ff ff       	call   1380 <gethostname@plt>
    1d84:	85 c0                	test   %eax,%eax
    1d86:	75 06                	jne    1d8e <initialize_bomb+0x5d>
    1d88:	89 c5                	mov    %eax,%ebp
    1d8a:	89 c3                	mov    %eax,%ebx
    1d8c:	eb 19                	jmp    1da7 <initialize_bomb+0x76>
    1d8e:	48 8d 3d 23 27 00 00 	lea    0x2723(%rip),%rdi        # 44b8 <array.3497+0x78>
    1d95:	e8 d6 f4 ff ff       	call   1270 <puts@plt>
    1d9a:	bf 08 00 00 00       	mov    $0x8,%edi
    1d9f:	e8 ec f5 ff ff       	call   1390 <exit@plt>
    1da4:	83 c3 01             	add    $0x1,%ebx
    1da7:	48 63 c3             	movslq %ebx,%rax
    1daa:	48 8d 15 af 63 00 00 	lea    0x63af(%rip),%rdx        # 8160 <host_table>
    1db1:	48 8b 3c c2          	mov    (%rdx,%rax,8),%rdi
    1db5:	48 85 ff             	test   %rdi,%rdi
    1db8:	74 11                	je     1dcb <initialize_bomb+0x9a>
    1dba:	48 89 e6             	mov    %rsp,%rsi
    1dbd:	e8 7e f4 ff ff       	call   1240 <strcasecmp@plt>
    1dc2:	85 c0                	test   %eax,%eax
    1dc4:	75 de                	jne    1da4 <initialize_bomb+0x73>
    1dc6:	bd 01 00 00 00       	mov    $0x1,%ebp
    1dcb:	85 ed                	test   %ebp,%ebp
    1dcd:	74 3b                	je     1e0a <initialize_bomb+0xd9>
    1dcf:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
    1dd4:	e8 f1 0f 00 00       	call   2dca <init_driver>
    1dd9:	85 c0                	test   %eax,%eax
    1ddb:	78 43                	js     1e20 <initialize_bomb+0xef>
    1ddd:	bf 04 00 00 00       	mov    $0x4,%edi
    1de2:	e8 49 f5 ff ff       	call   1330 <malloc@plt>
    1de7:	c7 00 11 fa 23 20    	movl   $0x2023fa11,(%rax)
    1ded:	48 8b 8c 24 48 20 00 	mov    0x2048(%rsp),%rcx
    1df4:	00 
    1df5:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    1dfc:	00 00 
    1dfe:	75 45                	jne    1e45 <initialize_bomb+0x114>
    1e00:	48 81 c4 58 20 00 00 	add    $0x2058,%rsp
    1e07:	5b                   	pop    %rbx
    1e08:	5d                   	pop    %rbp
    1e09:	c3                   	ret    
    1e0a:	48 8d 3d df 26 00 00 	lea    0x26df(%rip),%rdi        # 44f0 <array.3497+0xb0>
    1e11:	e8 5a f4 ff ff       	call   1270 <puts@plt>
    1e16:	bf 08 00 00 00       	mov    $0x8,%edi
    1e1b:	e8 70 f5 ff ff       	call   1390 <exit@plt>
    1e20:	48 8d 54 24 40       	lea    0x40(%rsp),%rdx
    1e25:	48 8d 35 40 29 00 00 	lea    0x2940(%rip),%rsi        # 476c <array.3497+0x32c>
    1e2c:	bf 01 00 00 00       	mov    $0x1,%edi
    1e31:	b8 00 00 00 00       	mov    $0x0,%eax
    1e36:	e8 25 f5 ff ff       	call   1360 <__printf_chk@plt>
    1e3b:	bf 08 00 00 00       	mov    $0x8,%edi
    1e40:	e8 4b f5 ff ff       	call   1390 <exit@plt>
    1e45:	e8 46 f4 ff ff       	call   1290 <__stack_chk_fail@plt>

0000000000001e4a <initialize_bomb_solve>:
    1e4a:	f3 0f 1e fa          	endbr64 
    1e4e:	c3                   	ret    

0000000000001e4f <blank_line>:
    1e4f:	f3 0f 1e fa          	endbr64 
    1e53:	55                   	push   %rbp
    1e54:	53                   	push   %rbx
    1e55:	48 83 ec 08          	sub    $0x8,%rsp
    1e59:	48 89 fd             	mov    %rdi,%rbp
    1e5c:	0f b6 5d 00          	movzbl 0x0(%rbp),%ebx
    1e60:	84 db                	test   %bl,%bl
    1e62:	74 1e                	je     1e82 <blank_line+0x33>
    1e64:	e8 67 f5 ff ff       	call   13d0 <__ctype_b_loc@plt>
    1e69:	48 8b 00             	mov    (%rax),%rax
    1e6c:	48 83 c5 01          	add    $0x1,%rbp
    1e70:	48 0f be db          	movsbq %bl,%rbx
    1e74:	f6 44 58 01 20       	testb  $0x20,0x1(%rax,%rbx,2)
    1e79:	75 e1                	jne    1e5c <blank_line+0xd>
    1e7b:	b8 00 00 00 00       	mov    $0x0,%eax
    1e80:	eb 05                	jmp    1e87 <blank_line+0x38>
    1e82:	b8 01 00 00 00       	mov    $0x1,%eax
    1e87:	48 83 c4 08          	add    $0x8,%rsp
    1e8b:	5b                   	pop    %rbx
    1e8c:	5d                   	pop    %rbp
    1e8d:	c3                   	ret    

0000000000001e8e <skip>:
    1e8e:	f3 0f 1e fa          	endbr64 
    1e92:	53                   	push   %rbx
    1e93:	48 63 15 b2 66 00 00 	movslq 0x66b2(%rip),%rdx        # 854c <num_input_strings>
    1e9a:	48 89 d0             	mov    %rdx,%rax
    1e9d:	48 c1 e0 04          	shl    $0x4,%rax
    1ea1:	48 29 d0             	sub    %rdx,%rax
    1ea4:	48 8d 15 b5 66 00 00 	lea    0x66b5(%rip),%rdx        # 8560 <input_strings>
    1eab:	48 8d 3c c2          	lea    (%rdx,%rax,8),%rdi
    1eaf:	48 8b 15 9a 66 00 00 	mov    0x669a(%rip),%rdx        # 8550 <infile>
    1eb6:	be 78 00 00 00       	mov    $0x78,%esi
    1ebb:	e8 10 f4 ff ff       	call   12d0 <fgets@plt>
    1ec0:	48 89 c3             	mov    %rax,%rbx
    1ec3:	48 85 c0             	test   %rax,%rax
    1ec6:	74 0c                	je     1ed4 <skip+0x46>
    1ec8:	48 89 c7             	mov    %rax,%rdi
    1ecb:	e8 7f ff ff ff       	call   1e4f <blank_line>
    1ed0:	85 c0                	test   %eax,%eax
    1ed2:	75 bf                	jne    1e93 <skip+0x5>
    1ed4:	48 89 d8             	mov    %rbx,%rax
    1ed7:	5b                   	pop    %rbx
    1ed8:	c3                   	ret    

0000000000001ed9 <send_msg>:
    1ed9:	f3 0f 1e fa          	endbr64 
    1edd:	55                   	push   %rbp
    1ede:	53                   	push   %rbx
    1edf:	4c 8d 9c 24 00 c0 ff 	lea    -0x4000(%rsp),%r11
    1ee6:	ff 
    1ee7:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    1eee:	48 83 0c 24 00       	orq    $0x0,(%rsp)
    1ef3:	4c 39 dc             	cmp    %r11,%rsp
    1ef6:	75 ef                	jne    1ee7 <send_msg+0xe>
    1ef8:	48 83 ec 18          	sub    $0x18,%rsp
    1efc:	41 89 f8             	mov    %edi,%r8d
    1eff:	48 89 f3             	mov    %rsi,%rbx
    1f02:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1f09:	00 00 
    1f0b:	48 89 84 24 08 40 00 	mov    %rax,0x4008(%rsp)
    1f12:	00 
    1f13:	31 c0                	xor    %eax,%eax
    1f15:	8b 35 31 66 00 00    	mov    0x6631(%rip),%esi        # 854c <num_input_strings>
    1f1b:	8d 46 ff             	lea    -0x1(%rsi),%eax
    1f1e:	48 98                	cltq   
    1f20:	48 89 c2             	mov    %rax,%rdx
    1f23:	48 c1 e2 04          	shl    $0x4,%rdx
    1f27:	48 29 c2             	sub    %rax,%rdx
    1f2a:	48 89 d0             	mov    %rdx,%rax
    1f2d:	48 8d 15 2c 66 00 00 	lea    0x662c(%rip),%rdx        # 8560 <input_strings>
    1f34:	48 8d 14 c2          	lea    (%rdx,%rax,8),%rdx
    1f38:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
    1f3f:	b8 00 00 00 00       	mov    $0x0,%eax
    1f44:	48 89 d7             	mov    %rdx,%rdi
    1f47:	f2 ae                	repnz scas %es:(%rdi),%al
    1f49:	48 89 c8             	mov    %rcx,%rax
    1f4c:	48 f7 d0             	not    %rax
    1f4f:	48 83 c0 63          	add    $0x63,%rax
    1f53:	48 3d 00 20 00 00    	cmp    $0x2000,%rax
    1f59:	0f 87 9c 00 00 00    	ja     1ffb <send_msg+0x122>
    1f5f:	45 85 c0             	test   %r8d,%r8d
    1f62:	0f 84 b3 00 00 00    	je     201b <send_msg+0x142>
    1f68:	48 8d 05 20 28 00 00 	lea    0x2820(%rip),%rax        # 478f <array.3497+0x34f>
    1f6f:	48 89 e5             	mov    %rsp,%rbp
    1f72:	48 83 ec 08          	sub    $0x8,%rsp
    1f76:	52                   	push   %rdx
    1f77:	56                   	push   %rsi
    1f78:	50                   	push   %rax
    1f79:	4c 8d 0d 20 59 00 00 	lea    0x5920(%rip),%r9        # 78a0 <authkey>
    1f80:	44 8b 05 19 61 00 00 	mov    0x6119(%rip),%r8d        # 80a0 <bomb_id>
    1f87:	48 8d 0d 09 28 00 00 	lea    0x2809(%rip),%rcx        # 4797 <array.3497+0x357>
    1f8e:	ba 00 20 00 00       	mov    $0x2000,%edx
    1f93:	be 01 00 00 00       	mov    $0x1,%esi
    1f98:	48 89 ef             	mov    %rbp,%rdi
    1f9b:	b8 00 00 00 00       	mov    $0x0,%eax
    1fa0:	e8 3b f4 ff ff       	call   13e0 <__sprintf_chk@plt>
    1fa5:	48 83 c4 20          	add    $0x20,%rsp
    1fa9:	4c 8d 8c 24 00 20 00 	lea    0x2000(%rsp),%r9
    1fb0:	00 
    1fb1:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    1fb7:	48 89 e9             	mov    %rbp,%rcx
    1fba:	48 8d 15 df 50 00 00 	lea    0x50df(%rip),%rdx        # 70a0 <lab>
    1fc1:	48 8d 35 d8 54 00 00 	lea    0x54d8(%rip),%rsi        # 74a0 <course>
    1fc8:	48 8d 3d d1 5c 00 00 	lea    0x5cd1(%rip),%rdi        # 7ca0 <userid>
    1fcf:	e8 06 10 00 00       	call   2fda <driver_post>
    1fd4:	c7 03 01 00 00 00    	movl   $0x1,(%rbx)
    1fda:	85 c0                	test   %eax,%eax
    1fdc:	78 49                	js     2027 <send_msg+0x14e>
    1fde:	48 8b 84 24 08 40 00 	mov    0x4008(%rsp),%rax
    1fe5:	00 
    1fe6:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    1fed:	00 00 
    1fef:	75 4d                	jne    203e <send_msg+0x165>
    1ff1:	48 81 c4 18 40 00 00 	add    $0x4018,%rsp
    1ff8:	5b                   	pop    %rbx
    1ff9:	5d                   	pop    %rbp
    1ffa:	c3                   	ret    
    1ffb:	48 8d 35 26 25 00 00 	lea    0x2526(%rip),%rsi        # 4528 <array.3497+0xe8>
    2002:	bf 01 00 00 00       	mov    $0x1,%edi
    2007:	b8 00 00 00 00       	mov    $0x0,%eax
    200c:	e8 4f f3 ff ff       	call   1360 <__printf_chk@plt>
    2011:	bf 08 00 00 00       	mov    $0x8,%edi
    2016:	e8 75 f3 ff ff       	call   1390 <exit@plt>
    201b:	48 8d 05 64 27 00 00 	lea    0x2764(%rip),%rax        # 4786 <array.3497+0x346>
    2022:	e9 48 ff ff ff       	jmp    1f6f <send_msg+0x96>
    2027:	48 8d bc 24 00 20 00 	lea    0x2000(%rsp),%rdi
    202e:	00 
    202f:	e8 3c f2 ff ff       	call   1270 <puts@plt>
    2034:	bf 00 00 00 00       	mov    $0x0,%edi
    2039:	e8 52 f3 ff ff       	call   1390 <exit@plt>
    203e:	e8 4d f2 ff ff       	call   1290 <__stack_chk_fail@plt>

0000000000002043 <explode_bomb>:
    2043:	f3 0f 1e fa          	endbr64 
    2047:	50                   	push   %rax
    2048:	58                   	pop    %rax
    2049:	48 83 ec 18          	sub    $0x18,%rsp
    204d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    2054:	00 00 
    2056:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    205b:	31 c0                	xor    %eax,%eax
    205d:	48 8d 3d 42 27 00 00 	lea    0x2742(%rip),%rdi        # 47a6 <array.3497+0x366>
    2064:	e8 07 f2 ff ff       	call   1270 <puts@plt>
    2069:	48 8d 3d 3f 27 00 00 	lea    0x273f(%rip),%rdi        # 47af <array.3497+0x36f>
    2070:	e8 fb f1 ff ff       	call   1270 <puts@plt>
    2075:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
    207c:	00 
    207d:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
    2082:	bf 00 00 00 00       	mov    $0x0,%edi
    2087:	e8 4d fe ff ff       	call   1ed9 <send_msg>
    208c:	83 7c 24 04 01       	cmpl   $0x1,0x4(%rsp)
    2091:	74 20                	je     20b3 <explode_bomb+0x70>
    2093:	48 8d 35 b6 24 00 00 	lea    0x24b6(%rip),%rsi        # 4550 <array.3497+0x110>
    209a:	bf 01 00 00 00       	mov    $0x1,%edi
    209f:	b8 00 00 00 00       	mov    $0x0,%eax
    20a4:	e8 b7 f2 ff ff       	call   1360 <__printf_chk@plt>
    20a9:	bf 08 00 00 00       	mov    $0x8,%edi
    20ae:	e8 dd f2 ff ff       	call   1390 <exit@plt>
    20b3:	48 8d 3d de 24 00 00 	lea    0x24de(%rip),%rdi        # 4598 <array.3497+0x158>
    20ba:	e8 b1 f1 ff ff       	call   1270 <puts@plt>
    20bf:	bf 08 00 00 00       	mov    $0x8,%edi
    20c4:	e8 c7 f2 ff ff       	call   1390 <exit@plt>

00000000000020c9 <read_six_numbers>:
    20c9:	f3 0f 1e fa          	endbr64 
    20cd:	48 83 ec 08          	sub    $0x8,%rsp
    20d1:	48 89 f2             	mov    %rsi,%rdx #第三个参数
    20d4:	48 8d 4e 04          	lea    0x4(%rsi),%rcx #第四个参数
    20d8:	48 8d 46 14          	lea    0x14(%rsi),%rax 
    20dc:	50                   	push   %rax #第八个参数
    20dd:	48 8d 46 10          	lea    0x10(%rsi),%rax
    20e1:	50                   	push   %rax #第七个参数
    20e2:	4c 8d 4e 0c          	lea    0xc(%rsi),%r9 #第六个参数
    20e6:	4c 8d 46 08          	lea    0x8(%rsi),%r8 #第五个参数
    20ea:	48 8d 35 d5 26 00 00 	lea    0x26d5(%rip),%rsi        # 47c6 <array.3497+0x386> #第二个参数
    20f1:	b8 00 00 00 00       	mov    $0x0,%eax
    20f6:	e8 55 f2 ff ff       	call   1350 <__isoc99_sscanf@plt>
    20fb:	48 83 c4 10          	add    $0x10,%rsp
    20ff:	83 f8 05             	cmp    $0x5,%eax
    2102:	7e 05                	jle    2109 <read_six_numbers+0x40>
    2104:	48 83 c4 08          	add    $0x8,%rsp
    2108:	c3                   	ret    
    2109:	e8 35 ff ff ff       	call   2043 <explode_bomb>

000000000000210e <read_line>:
    210e:	f3 0f 1e fa          	endbr64 
    2112:	48 83 ec 08          	sub    $0x8,%rsp
    2116:	b8 00 00 00 00       	mov    $0x0,%eax
    211b:	e8 6e fd ff ff       	call   1e8e <skip>
    2120:	48 85 c0             	test   %rax,%rax
    2123:	74 72                	je     2197 <read_line+0x89>
    2125:	8b 15 21 64 00 00    	mov    0x6421(%rip),%edx        # 854c <num_input_strings>
    212b:	48 63 ca             	movslq %edx,%rcx
    212e:	48 89 c8             	mov    %rcx,%rax
    2131:	48 c1 e0 04          	shl    $0x4,%rax
    2135:	48 29 c8             	sub    %rcx,%rax
    2138:	48 8d 0d 21 64 00 00 	lea    0x6421(%rip),%rcx        # 8560 <input_strings>
    213f:	48 8d 34 c1          	lea    (%rcx,%rax,8),%rsi
    2143:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
    214a:	b8 00 00 00 00       	mov    $0x0,%eax
    214f:	48 89 f7             	mov    %rsi,%rdi
    2152:	f2 ae                	repnz scas %es:(%rdi),%al
    2154:	48 f7 d1             	not    %rcx
    2157:	48 83 e9 01          	sub    $0x1,%rcx
    215b:	83 f9 76             	cmp    $0x76,%ecx
    215e:	0f 8f ab 00 00 00    	jg     220f <read_line+0x101>
    2164:	83 e9 01             	sub    $0x1,%ecx
    2167:	48 63 c9             	movslq %ecx,%rcx
    216a:	48 63 fa             	movslq %edx,%rdi
    216d:	48 89 f8             	mov    %rdi,%rax
    2170:	48 c1 e0 04          	shl    $0x4,%rax
    2174:	48 29 f8             	sub    %rdi,%rax
    2177:	48 8d 3d e2 63 00 00 	lea    0x63e2(%rip),%rdi        # 8560 <input_strings>
    217e:	48 8d 04 c7          	lea    (%rdi,%rax,8),%rax
    2182:	c6 04 08 00          	movb   $0x0,(%rax,%rcx,1)
    2186:	83 c2 01             	add    $0x1,%edx
    2189:	89 15 bd 63 00 00    	mov    %edx,0x63bd(%rip)        # 854c <num_input_strings>
    218f:	48 89 f0             	mov    %rsi,%rax
    2192:	48 83 c4 08          	add    $0x8,%rsp
    2196:	c3                   	ret    
    2197:	48 8b 05 92 63 00 00 	mov    0x6392(%rip),%rax        # 8530 <stdin@GLIBC_2.2.5>
    219e:	48 39 05 ab 63 00 00 	cmp    %rax,0x63ab(%rip)        # 8550 <infile>
    21a5:	74 1b                	je     21c2 <read_line+0xb4>
    21a7:	48 8d 3d 48 26 00 00 	lea    0x2648(%rip),%rdi        # 47f6 <array.3497+0x3b6>
    21ae:	e8 6d f0 ff ff       	call   1220 <getenv@plt>
    21b3:	48 85 c0             	test   %rax,%rax
    21b6:	74 20                	je     21d8 <read_line+0xca>
    21b8:	bf 00 00 00 00       	mov    $0x0,%edi
    21bd:	e8 ce f1 ff ff       	call   1390 <exit@plt>
    21c2:	48 8d 3d 0f 26 00 00 	lea    0x260f(%rip),%rdi        # 47d8 <array.3497+0x398>
    21c9:	e8 a2 f0 ff ff       	call   1270 <puts@plt>
    21ce:	bf 08 00 00 00       	mov    $0x8,%edi
    21d3:	e8 b8 f1 ff ff       	call   1390 <exit@plt>
    21d8:	48 8b 05 51 63 00 00 	mov    0x6351(%rip),%rax        # 8530 <stdin@GLIBC_2.2.5>
    21df:	48 89 05 6a 63 00 00 	mov    %rax,0x636a(%rip)        # 8550 <infile>
    21e6:	b8 00 00 00 00       	mov    $0x0,%eax
    21eb:	e8 9e fc ff ff       	call   1e8e <skip>
    21f0:	48 85 c0             	test   %rax,%rax
    21f3:	0f 85 2c ff ff ff    	jne    2125 <read_line+0x17>
    21f9:	48 8d 3d d8 25 00 00 	lea    0x25d8(%rip),%rdi        # 47d8 <array.3497+0x398>
    2200:	e8 6b f0 ff ff       	call   1270 <puts@plt>
    2205:	bf 00 00 00 00       	mov    $0x0,%edi
    220a:	e8 81 f1 ff ff       	call   1390 <exit@plt>
    220f:	48 8d 3d eb 25 00 00 	lea    0x25eb(%rip),%rdi        # 4801 <array.3497+0x3c1>
    2216:	e8 55 f0 ff ff       	call   1270 <puts@plt>
    221b:	8b 05 2b 63 00 00    	mov    0x632b(%rip),%eax        # 854c <num_input_strings>
    2221:	8d 50 01             	lea    0x1(%rax),%edx
    2224:	89 15 22 63 00 00    	mov    %edx,0x6322(%rip)        # 854c <num_input_strings>
    222a:	48 98                	cltq   
    222c:	48 6b c0 78          	imul   $0x78,%rax,%rax
    2230:	48 8d 15 29 63 00 00 	lea    0x6329(%rip),%rdx        # 8560 <input_strings>
    2237:	48 be 2a 2a 2a 74 72 	movabs $0x636e7572742a2a2a,%rsi
    223e:	75 6e 63 
    2241:	48 bf 61 74 65 64 2a 	movabs $0x2a2a2a64657461,%rdi
    2248:	2a 2a 00 
    224b:	48 89 34 02          	mov    %rsi,(%rdx,%rax,1)
    224f:	48 89 7c 02 08       	mov    %rdi,0x8(%rdx,%rax,1)
    2254:	e8 ea fd ff ff       	call   2043 <explode_bomb>

0000000000002259 <phase_defused>:
    2259:	f3 0f 1e fa          	endbr64 
    225d:	53                   	push   %rbx
    225e:	48 89 fb             	mov    %rdi,%rbx
    2261:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
    2267:	48 89 fe             	mov    %rdi,%rsi
    226a:	bf 01 00 00 00       	mov    $0x1,%edi
    226f:	e8 65 fc ff ff       	call   1ed9 <send_msg>
    2274:	83 3b 01             	cmpl   $0x1,(%rbx)
    2277:	75 0b                	jne    2284 <phase_defused+0x2b>
    2279:	83 3d cc 62 00 00 06 	cmpl   $0x6,0x62cc(%rip)        # 854c <num_input_strings>
    2280:	74 22                	je     22a4 <phase_defused+0x4b>
    2282:	5b                   	pop    %rbx
    2283:	c3                   	ret    
    2284:	48 8d 35 c5 22 00 00 	lea    0x22c5(%rip),%rsi        # 4550 <array.3497+0x110>
    228b:	bf 01 00 00 00       	mov    $0x1,%edi
    2290:	b8 00 00 00 00       	mov    $0x0,%eax
    2295:	e8 c6 f0 ff ff       	call   1360 <__printf_chk@plt>
    229a:	bf 08 00 00 00       	mov    $0x8,%edi
    229f:	e8 ec f0 ff ff       	call   1390 <exit@plt>
    22a4:	e8 cf f3 ff ff       	call   1678 <genshin>
    22a9:	85 c0                	test   %eax,%eax        #返回1
    22ab:	75 26                	jne    22d3 <phase_defused+0x7a>
    22ad:	48 8d 3d c4 23 00 00 	lea    0x23c4(%rip),%rdi        # 4678 <array.3497+0x238>
    22b4:	e8 b7 ef ff ff       	call   1270 <puts@plt>
    22b9:	48 8d 3d f8 23 00 00 	lea    0x23f8(%rip),%rdi        # 46b8 <array.3497+0x278>
    22c0:	e8 ab ef ff ff       	call   1270 <puts@plt>
    22c5:	48 8d 3d 34 24 00 00 	lea    0x2434(%rip),%rdi        # 4700 <array.3497+0x2c0>
    22cc:	e8 9f ef ff ff       	call   1270 <puts@plt>
    22d1:	eb af                	jmp    2282 <phase_defused+0x29>
    22d3:	e8 2d f4 ff ff       	call   1705 <qidong>
    22d8:	85 c0                	test   %eax,%eax
    22da:	74 24                	je     2300 <phase_defused+0xa7>
    22dc:	48 8d 3d dd 22 00 00 	lea    0x22dd(%rip),%rdi        # 45c0 <array.3497+0x180>
    22e3:	e8 88 ef ff ff       	call   1270 <puts@plt>
    22e8:	48 8d 3d f9 22 00 00 	lea    0x22f9(%rip),%rdi        # 45e8 <array.3497+0x1a8>
    22ef:	e8 7c ef ff ff       	call   1270 <puts@plt>
    22f4:	b8 00 00 00 00       	mov    $0x0,%eax
    22f9:	e8 90 f8 ff ff       	call   1b8e <secret_phase>
    22fe:	eb ad                	jmp    22ad <phase_defused+0x54>
    2300:	48 8d 3d 21 23 00 00 	lea    0x2321(%rip),%rdi        # 4628 <array.3497+0x1e8>
    2307:	e8 64 ef ff ff       	call   1270 <puts@plt>
    230c:	eb 9f                	jmp    22ad <phase_defused+0x54>

000000000000230e <rio_readinitb>:
    230e:	89 37                	mov    %esi,(%rdi)
    2310:	c7 47 04 00 00 00 00 	movl   $0x0,0x4(%rdi)
    2317:	48 8d 47 10          	lea    0x10(%rdi),%rax
    231b:	48 89 47 08          	mov    %rax,0x8(%rdi)
    231f:	c3                   	ret    

0000000000002320 <sigalrm_handler>:
    2320:	f3 0f 1e fa          	endbr64 
    2324:	50                   	push   %rax
    2325:	58                   	pop    %rax
    2326:	48 83 ec 08          	sub    $0x8,%rsp
    232a:	b9 00 00 00 00       	mov    $0x0,%ecx
    232f:	48 8d 15 42 25 00 00 	lea    0x2542(%rip),%rdx        # 4878 <array.3497+0x438>
    2336:	be 01 00 00 00       	mov    $0x1,%esi
    233b:	48 8b 3d fe 61 00 00 	mov    0x61fe(%rip),%rdi        # 8540 <stderr@GLIBC_2.2.5>
    2342:	b8 00 00 00 00       	mov    $0x0,%eax
    2347:	e8 64 f0 ff ff       	call   13b0 <__fprintf_chk@plt>
    234c:	bf 01 00 00 00       	mov    $0x1,%edi
    2351:	e8 3a f0 ff ff       	call   1390 <exit@plt>

0000000000002356 <rio_writen>:
    2356:	41 55                	push   %r13
    2358:	41 54                	push   %r12
    235a:	55                   	push   %rbp
    235b:	53                   	push   %rbx
    235c:	48 83 ec 08          	sub    $0x8,%rsp
    2360:	41 89 fc             	mov    %edi,%r12d
    2363:	48 89 f5             	mov    %rsi,%rbp
    2366:	49 89 d5             	mov    %rdx,%r13
    2369:	48 89 d3             	mov    %rdx,%rbx
    236c:	eb 06                	jmp    2374 <rio_writen+0x1e>
    236e:	48 29 c3             	sub    %rax,%rbx
    2371:	48 01 c5             	add    %rax,%rbp
    2374:	48 85 db             	test   %rbx,%rbx
    2377:	74 24                	je     239d <rio_writen+0x47>
    2379:	48 89 da             	mov    %rbx,%rdx
    237c:	48 89 ee             	mov    %rbp,%rsi
    237f:	44 89 e7             	mov    %r12d,%edi
    2382:	e8 f9 ee ff ff       	call   1280 <write@plt>
    2387:	48 85 c0             	test   %rax,%rax
    238a:	7f e2                	jg     236e <rio_writen+0x18>
    238c:	e8 bf ee ff ff       	call   1250 <__errno_location@plt>
    2391:	83 38 04             	cmpl   $0x4,(%rax)
    2394:	75 15                	jne    23ab <rio_writen+0x55>
    2396:	b8 00 00 00 00       	mov    $0x0,%eax
    239b:	eb d1                	jmp    236e <rio_writen+0x18>
    239d:	4c 89 e8             	mov    %r13,%rax
    23a0:	48 83 c4 08          	add    $0x8,%rsp
    23a4:	5b                   	pop    %rbx
    23a5:	5d                   	pop    %rbp
    23a6:	41 5c                	pop    %r12
    23a8:	41 5d                	pop    %r13
    23aa:	c3                   	ret    
    23ab:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    23b2:	eb ec                	jmp    23a0 <rio_writen+0x4a>

00000000000023b4 <rio_read>:
    23b4:	41 55                	push   %r13
    23b6:	41 54                	push   %r12
    23b8:	55                   	push   %rbp
    23b9:	53                   	push   %rbx
    23ba:	48 83 ec 08          	sub    $0x8,%rsp
    23be:	48 89 fb             	mov    %rdi,%rbx
    23c1:	49 89 f5             	mov    %rsi,%r13
    23c4:	49 89 d4             	mov    %rdx,%r12
    23c7:	eb 17                	jmp    23e0 <rio_read+0x2c>
    23c9:	e8 82 ee ff ff       	call   1250 <__errno_location@plt>
    23ce:	83 38 04             	cmpl   $0x4,(%rax)
    23d1:	74 0d                	je     23e0 <rio_read+0x2c>
    23d3:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    23da:	eb 54                	jmp    2430 <rio_read+0x7c>
    23dc:	48 89 6b 08          	mov    %rbp,0x8(%rbx)
    23e0:	8b 6b 04             	mov    0x4(%rbx),%ebp
    23e3:	85 ed                	test   %ebp,%ebp
    23e5:	7f 23                	jg     240a <rio_read+0x56>
    23e7:	48 8d 6b 10          	lea    0x10(%rbx),%rbp
    23eb:	8b 3b                	mov    (%rbx),%edi
    23ed:	ba 00 20 00 00       	mov    $0x2000,%edx
    23f2:	48 89 ee             	mov    %rbp,%rsi
    23f5:	e8 c6 ee ff ff       	call   12c0 <read@plt>
    23fa:	89 43 04             	mov    %eax,0x4(%rbx)
    23fd:	85 c0                	test   %eax,%eax
    23ff:	78 c8                	js     23c9 <rio_read+0x15>
    2401:	75 d9                	jne    23dc <rio_read+0x28>
    2403:	b8 00 00 00 00       	mov    $0x0,%eax
    2408:	eb 26                	jmp    2430 <rio_read+0x7c>
    240a:	89 e8                	mov    %ebp,%eax
    240c:	4c 39 e0             	cmp    %r12,%rax
    240f:	72 03                	jb     2414 <rio_read+0x60>
    2411:	44 89 e5             	mov    %r12d,%ebp
    2414:	4c 63 e5             	movslq %ebp,%r12
    2417:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    241b:	4c 89 e2             	mov    %r12,%rdx
    241e:	4c 89 ef             	mov    %r13,%rdi
    2421:	e8 fa ee ff ff       	call   1320 <memcpy@plt>
    2426:	4c 01 63 08          	add    %r12,0x8(%rbx)
    242a:	29 6b 04             	sub    %ebp,0x4(%rbx)
    242d:	4c 89 e0             	mov    %r12,%rax
    2430:	48 83 c4 08          	add    $0x8,%rsp
    2434:	5b                   	pop    %rbx
    2435:	5d                   	pop    %rbp
    2436:	41 5c                	pop    %r12
    2438:	41 5d                	pop    %r13
    243a:	c3                   	ret    

000000000000243b <rio_readlineb>:
    243b:	41 55                	push   %r13
    243d:	41 54                	push   %r12
    243f:	55                   	push   %rbp
    2440:	53                   	push   %rbx
    2441:	48 83 ec 18          	sub    $0x18,%rsp
    2445:	49 89 fd             	mov    %rdi,%r13
    2448:	48 89 f5             	mov    %rsi,%rbp
    244b:	49 89 d4             	mov    %rdx,%r12
    244e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    2455:	00 00 
    2457:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    245c:	31 c0                	xor    %eax,%eax
    245e:	bb 01 00 00 00       	mov    $0x1,%ebx
    2463:	eb 18                	jmp    247d <rio_readlineb+0x42>
    2465:	85 c0                	test   %eax,%eax
    2467:	75 65                	jne    24ce <rio_readlineb+0x93>
    2469:	48 83 fb 01          	cmp    $0x1,%rbx
    246d:	75 3d                	jne    24ac <rio_readlineb+0x71>
    246f:	b8 00 00 00 00       	mov    $0x0,%eax
    2474:	eb 3d                	jmp    24b3 <rio_readlineb+0x78>
    2476:	48 83 c3 01          	add    $0x1,%rbx
    247a:	48 89 d5             	mov    %rdx,%rbp
    247d:	4c 39 e3             	cmp    %r12,%rbx
    2480:	73 2a                	jae    24ac <rio_readlineb+0x71>
    2482:	48 8d 74 24 07       	lea    0x7(%rsp),%rsi
    2487:	ba 01 00 00 00       	mov    $0x1,%edx
    248c:	4c 89 ef             	mov    %r13,%rdi
    248f:	e8 20 ff ff ff       	call   23b4 <rio_read>
    2494:	83 f8 01             	cmp    $0x1,%eax
    2497:	75 cc                	jne    2465 <rio_readlineb+0x2a>
    2499:	48 8d 55 01          	lea    0x1(%rbp),%rdx
    249d:	0f b6 44 24 07       	movzbl 0x7(%rsp),%eax
    24a2:	88 45 00             	mov    %al,0x0(%rbp)
    24a5:	3c 0a                	cmp    $0xa,%al
    24a7:	75 cd                	jne    2476 <rio_readlineb+0x3b>
    24a9:	48 89 d5             	mov    %rdx,%rbp
    24ac:	c6 45 00 00          	movb   $0x0,0x0(%rbp)
    24b0:	48 89 d8             	mov    %rbx,%rax
    24b3:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    24b8:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    24bf:	00 00 
    24c1:	75 14                	jne    24d7 <rio_readlineb+0x9c>
    24c3:	48 83 c4 18          	add    $0x18,%rsp
    24c7:	5b                   	pop    %rbx
    24c8:	5d                   	pop    %rbp
    24c9:	41 5c                	pop    %r12
    24cb:	41 5d                	pop    %r13
    24cd:	c3                   	ret    
    24ce:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    24d5:	eb dc                	jmp    24b3 <rio_readlineb+0x78>
    24d7:	e8 b4 ed ff ff       	call   1290 <__stack_chk_fail@plt>

00000000000024dc <urlencode>:
    24dc:	41 54                	push   %r12
    24de:	55                   	push   %rbp
    24df:	53                   	push   %rbx
    24e0:	48 83 ec 10          	sub    $0x10,%rsp
    24e4:	48 89 fb             	mov    %rdi,%rbx
    24e7:	48 89 f5             	mov    %rsi,%rbp
    24ea:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    24f1:	00 00 
    24f3:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    24f8:	31 c0                	xor    %eax,%eax
    24fa:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
    2501:	f2 ae                	repnz scas %es:(%rdi),%al
    2503:	48 f7 d1             	not    %rcx
    2506:	8d 41 ff             	lea    -0x1(%rcx),%eax
    2509:	eb 0f                	jmp    251a <urlencode+0x3e>
    250b:	44 88 45 00          	mov    %r8b,0x0(%rbp)
    250f:	48 8d 6d 01          	lea    0x1(%rbp),%rbp
    2513:	48 83 c3 01          	add    $0x1,%rbx
    2517:	44 89 e0             	mov    %r12d,%eax
    251a:	44 8d 60 ff          	lea    -0x1(%rax),%r12d
    251e:	85 c0                	test   %eax,%eax
    2520:	0f 84 a8 00 00 00    	je     25ce <urlencode+0xf2>
    2526:	44 0f b6 03          	movzbl (%rbx),%r8d
    252a:	41 80 f8 2a          	cmp    $0x2a,%r8b
    252e:	0f 94 c2             	sete   %dl
    2531:	41 80 f8 2d          	cmp    $0x2d,%r8b
    2535:	0f 94 c0             	sete   %al
    2538:	08 c2                	or     %al,%dl
    253a:	75 cf                	jne    250b <urlencode+0x2f>
    253c:	41 80 f8 2e          	cmp    $0x2e,%r8b
    2540:	74 c9                	je     250b <urlencode+0x2f>
    2542:	41 80 f8 5f          	cmp    $0x5f,%r8b
    2546:	74 c3                	je     250b <urlencode+0x2f>
    2548:	41 8d 40 d0          	lea    -0x30(%r8),%eax
    254c:	3c 09                	cmp    $0x9,%al
    254e:	76 bb                	jbe    250b <urlencode+0x2f>
    2550:	41 8d 40 bf          	lea    -0x41(%r8),%eax
    2554:	3c 19                	cmp    $0x19,%al
    2556:	76 b3                	jbe    250b <urlencode+0x2f>
    2558:	41 8d 40 9f          	lea    -0x61(%r8),%eax
    255c:	3c 19                	cmp    $0x19,%al
    255e:	76 ab                	jbe    250b <urlencode+0x2f>
    2560:	41 80 f8 20          	cmp    $0x20,%r8b
    2564:	74 56                	je     25bc <urlencode+0xe0>
    2566:	41 8d 40 e0          	lea    -0x20(%r8),%eax
    256a:	3c 5f                	cmp    $0x5f,%al
    256c:	0f 96 c2             	setbe  %dl
    256f:	41 80 f8 09          	cmp    $0x9,%r8b
    2573:	0f 94 c0             	sete   %al
    2576:	08 c2                	or     %al,%dl
    2578:	74 4f                	je     25c9 <urlencode+0xed>
    257a:	48 89 e7             	mov    %rsp,%rdi
    257d:	45 0f b6 c0          	movzbl %r8b,%r8d
    2581:	48 8d 0d a5 23 00 00 	lea    0x23a5(%rip),%rcx        # 492d <array.3497+0x4ed>
    2588:	ba 08 00 00 00       	mov    $0x8,%edx
    258d:	be 01 00 00 00       	mov    $0x1,%esi
    2592:	b8 00 00 00 00       	mov    $0x0,%eax
    2597:	e8 44 ee ff ff       	call   13e0 <__sprintf_chk@plt>
    259c:	0f b6 04 24          	movzbl (%rsp),%eax
    25a0:	88 45 00             	mov    %al,0x0(%rbp)
    25a3:	0f b6 44 24 01       	movzbl 0x1(%rsp),%eax
    25a8:	88 45 01             	mov    %al,0x1(%rbp)
    25ab:	0f b6 44 24 02       	movzbl 0x2(%rsp),%eax
    25b0:	88 45 02             	mov    %al,0x2(%rbp)
    25b3:	48 8d 6d 03          	lea    0x3(%rbp),%rbp
    25b7:	e9 57 ff ff ff       	jmp    2513 <urlencode+0x37>
    25bc:	c6 45 00 2b          	movb   $0x2b,0x0(%rbp)
    25c0:	48 8d 6d 01          	lea    0x1(%rbp),%rbp
    25c4:	e9 4a ff ff ff       	jmp    2513 <urlencode+0x37>
    25c9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    25ce:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    25d3:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
    25da:	00 00 
    25dc:	75 09                	jne    25e7 <urlencode+0x10b>
    25de:	48 83 c4 10          	add    $0x10,%rsp
    25e2:	5b                   	pop    %rbx
    25e3:	5d                   	pop    %rbp
    25e4:	41 5c                	pop    %r12
    25e6:	c3                   	ret    
    25e7:	e8 a4 ec ff ff       	call   1290 <__stack_chk_fail@plt>

00000000000025ec <submitr>:
    25ec:	f3 0f 1e fa          	endbr64 
    25f0:	41 57                	push   %r15
    25f2:	41 56                	push   %r14
    25f4:	41 55                	push   %r13
    25f6:	41 54                	push   %r12
    25f8:	55                   	push   %rbp
    25f9:	53                   	push   %rbx
    25fa:	4c 8d 9c 24 00 60 ff 	lea    -0xa000(%rsp),%r11
    2601:	ff 
    2602:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    2609:	48 83 0c 24 00       	orq    $0x0,(%rsp)
    260e:	4c 39 dc             	cmp    %r11,%rsp
    2611:	75 ef                	jne    2602 <submitr+0x16>
    2613:	48 83 ec 68          	sub    $0x68,%rsp
    2617:	49 89 fc             	mov    %rdi,%r12
    261a:	89 74 24 1c          	mov    %esi,0x1c(%rsp)
    261e:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    2623:	49 89 cd             	mov    %rcx,%r13
    2626:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
    262b:	4d 89 ce             	mov    %r9,%r14
    262e:	48 8b ac 24 a0 a0 00 	mov    0xa0a0(%rsp),%rbp
    2635:	00 
    2636:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    263d:	00 00 
    263f:	48 89 84 24 58 a0 00 	mov    %rax,0xa058(%rsp)
    2646:	00 
    2647:	31 c0                	xor    %eax,%eax
    2649:	c7 44 24 2c 00 00 00 	movl   $0x0,0x2c(%rsp)
    2650:	00 
    2651:	ba 00 00 00 00       	mov    $0x0,%edx
    2656:	be 01 00 00 00       	mov    $0x1,%esi
    265b:	bf 02 00 00 00       	mov    $0x2,%edi
    2660:	e8 8b ed ff ff       	call   13f0 <socket@plt>
    2665:	85 c0                	test   %eax,%eax
    2667:	0f 88 a5 02 00 00    	js     2912 <submitr+0x326>
    266d:	89 c3                	mov    %eax,%ebx
    266f:	4c 89 e7             	mov    %r12,%rdi
    2672:	e8 79 ec ff ff       	call   12f0 <gethostbyname@plt>
    2677:	48 85 c0             	test   %rax,%rax
    267a:	0f 84 de 02 00 00    	je     295e <submitr+0x372>
    2680:	4c 8d 7c 24 30       	lea    0x30(%rsp),%r15
    2685:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
    268c:	00 00 
    268e:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    2695:	00 00 
    2697:	66 c7 44 24 30 02 00 	movw   $0x2,0x30(%rsp)
    269e:	48 63 50 14          	movslq 0x14(%rax),%rdx
    26a2:	48 8b 40 18          	mov    0x18(%rax),%rax
    26a6:	48 8b 30             	mov    (%rax),%rsi
    26a9:	48 8d 7c 24 34       	lea    0x34(%rsp),%rdi
    26ae:	b9 0c 00 00 00       	mov    $0xc,%ecx
    26b3:	e8 48 ec ff ff       	call   1300 <__memmove_chk@plt>
    26b8:	0f b7 74 24 1c       	movzwl 0x1c(%rsp),%esi
    26bd:	66 c1 c6 08          	rol    $0x8,%si
    26c1:	66 89 74 24 32       	mov    %si,0x32(%rsp)
    26c6:	ba 10 00 00 00       	mov    $0x10,%edx
    26cb:	4c 89 fe             	mov    %r15,%rsi
    26ce:	89 df                	mov    %ebx,%edi
    26d0:	e8 cb ec ff ff       	call   13a0 <connect@plt>
    26d5:	85 c0                	test   %eax,%eax
    26d7:	0f 88 f7 02 00 00    	js     29d4 <submitr+0x3e8>
    26dd:	48 c7 c6 ff ff ff ff 	mov    $0xffffffffffffffff,%rsi
    26e4:	b8 00 00 00 00       	mov    $0x0,%eax
    26e9:	48 89 f1             	mov    %rsi,%rcx
    26ec:	4c 89 f7             	mov    %r14,%rdi
    26ef:	f2 ae                	repnz scas %es:(%rdi),%al
    26f1:	48 89 ca             	mov    %rcx,%rdx
    26f4:	48 f7 d2             	not    %rdx
    26f7:	48 89 f1             	mov    %rsi,%rcx
    26fa:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    26ff:	f2 ae                	repnz scas %es:(%rdi),%al
    2701:	48 f7 d1             	not    %rcx
    2704:	49 89 c8             	mov    %rcx,%r8
    2707:	48 89 f1             	mov    %rsi,%rcx
    270a:	4c 89 ef             	mov    %r13,%rdi
    270d:	f2 ae                	repnz scas %es:(%rdi),%al
    270f:	48 f7 d1             	not    %rcx
    2712:	4d 8d 44 08 fe       	lea    -0x2(%r8,%rcx,1),%r8
    2717:	48 89 f1             	mov    %rsi,%rcx
    271a:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    271f:	f2 ae                	repnz scas %es:(%rdi),%al
    2721:	48 89 c8             	mov    %rcx,%rax
    2724:	48 f7 d0             	not    %rax
    2727:	49 8d 4c 00 ff       	lea    -0x1(%r8,%rax,1),%rcx
    272c:	48 8d 44 52 fd       	lea    -0x3(%rdx,%rdx,2),%rax
    2731:	48 8d 84 01 80 00 00 	lea    0x80(%rcx,%rax,1),%rax
    2738:	00 
    2739:	48 3d 00 20 00 00    	cmp    $0x2000,%rax
    273f:	0f 87 f7 02 00 00    	ja     2a3c <submitr+0x450>
    2745:	48 8d b4 24 50 40 00 	lea    0x4050(%rsp),%rsi
    274c:	00 
    274d:	b9 00 04 00 00       	mov    $0x400,%ecx
    2752:	b8 00 00 00 00       	mov    $0x0,%eax
    2757:	48 89 f7             	mov    %rsi,%rdi
    275a:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    275d:	4c 89 f7             	mov    %r14,%rdi
    2760:	e8 77 fd ff ff       	call   24dc <urlencode>
    2765:	85 c0                	test   %eax,%eax
    2767:	0f 88 42 03 00 00    	js     2aaf <submitr+0x4c3>
    276d:	4c 8d bc 24 50 20 00 	lea    0x2050(%rsp),%r15
    2774:	00 
    2775:	48 83 ec 08          	sub    $0x8,%rsp
    2779:	41 54                	push   %r12
    277b:	48 8d 84 24 60 40 00 	lea    0x4060(%rsp),%rax
    2782:	00 
    2783:	50                   	push   %rax
    2784:	41 55                	push   %r13
    2786:	4c 8b 4c 24 30       	mov    0x30(%rsp),%r9
    278b:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
    2790:	48 8d 0d 09 21 00 00 	lea    0x2109(%rip),%rcx        # 48a0 <array.3497+0x460>
    2797:	ba 00 20 00 00       	mov    $0x2000,%edx
    279c:	be 01 00 00 00       	mov    $0x1,%esi
    27a1:	4c 89 ff             	mov    %r15,%rdi
    27a4:	b8 00 00 00 00       	mov    $0x0,%eax
    27a9:	e8 32 ec ff ff       	call   13e0 <__sprintf_chk@plt>
    27ae:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
    27b5:	b8 00 00 00 00       	mov    $0x0,%eax
    27ba:	4c 89 ff             	mov    %r15,%rdi
    27bd:	f2 ae                	repnz scas %es:(%rdi),%al
    27bf:	48 f7 d1             	not    %rcx
    27c2:	48 8d 51 ff          	lea    -0x1(%rcx),%rdx
    27c6:	48 83 c4 20          	add    $0x20,%rsp
    27ca:	4c 89 fe             	mov    %r15,%rsi
    27cd:	89 df                	mov    %ebx,%edi
    27cf:	e8 82 fb ff ff       	call   2356 <rio_writen>
    27d4:	48 85 c0             	test   %rax,%rax
    27d7:	0f 88 5d 03 00 00    	js     2b3a <submitr+0x54e>
    27dd:	4c 8d 64 24 40       	lea    0x40(%rsp),%r12
    27e2:	89 de                	mov    %ebx,%esi
    27e4:	4c 89 e7             	mov    %r12,%rdi
    27e7:	e8 22 fb ff ff       	call   230e <rio_readinitb>
    27ec:	48 8d b4 24 50 20 00 	lea    0x2050(%rsp),%rsi
    27f3:	00 
    27f4:	ba 00 20 00 00       	mov    $0x2000,%edx
    27f9:	4c 89 e7             	mov    %r12,%rdi
    27fc:	e8 3a fc ff ff       	call   243b <rio_readlineb>
    2801:	48 85 c0             	test   %rax,%rax
    2804:	0f 8e 9c 03 00 00    	jle    2ba6 <submitr+0x5ba>
    280a:	48 8d 4c 24 2c       	lea    0x2c(%rsp),%rcx
    280f:	48 8d 94 24 50 60 00 	lea    0x6050(%rsp),%rdx
    2816:	00 
    2817:	48 8d bc 24 50 20 00 	lea    0x2050(%rsp),%rdi
    281e:	00 
    281f:	4c 8d 84 24 50 80 00 	lea    0x8050(%rsp),%r8
    2826:	00 
    2827:	48 8d 35 06 21 00 00 	lea    0x2106(%rip),%rsi        # 4934 <array.3497+0x4f4>
    282e:	b8 00 00 00 00       	mov    $0x0,%eax
    2833:	e8 18 eb ff ff       	call   1350 <__isoc99_sscanf@plt>
    2838:	48 8d b4 24 50 20 00 	lea    0x2050(%rsp),%rsi
    283f:	00 
    2840:	b9 03 00 00 00       	mov    $0x3,%ecx
    2845:	48 8d 3d ff 20 00 00 	lea    0x20ff(%rip),%rdi        # 494b <array.3497+0x50b>
    284c:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    284e:	0f 97 c0             	seta   %al
    2851:	1c 00                	sbb    $0x0,%al
    2853:	84 c0                	test   %al,%al
    2855:	0f 84 cb 03 00 00    	je     2c26 <submitr+0x63a>
    285b:	48 8d b4 24 50 20 00 	lea    0x2050(%rsp),%rsi
    2862:	00 
    2863:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
    2868:	ba 00 20 00 00       	mov    $0x2000,%edx
    286d:	e8 c9 fb ff ff       	call   243b <rio_readlineb>
    2872:	48 85 c0             	test   %rax,%rax
    2875:	7f c1                	jg     2838 <submitr+0x24c>
    2877:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
    287e:	3a 20 43 
    2881:	48 ba 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rdx
    2888:	20 75 6e 
    288b:	48 89 45 00          	mov    %rax,0x0(%rbp)
    288f:	48 89 55 08          	mov    %rdx,0x8(%rbp)
    2893:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
    289a:	74 6f 20 
    289d:	48 ba 72 65 61 64 20 	movabs $0x6165682064616572,%rdx
    28a4:	68 65 61 
    28a7:	48 89 45 10          	mov    %rax,0x10(%rbp)
    28ab:	48 89 55 18          	mov    %rdx,0x18(%rbp)
    28af:	48 b8 64 65 72 73 20 	movabs $0x6f72662073726564,%rax
    28b6:	66 72 6f 
    28b9:	48 ba 6d 20 41 75 74 	movabs $0x616c6f747541206d,%rdx
    28c0:	6f 6c 61 
    28c3:	48 89 45 20          	mov    %rax,0x20(%rbp)
    28c7:	48 89 55 28          	mov    %rdx,0x28(%rbp)
    28cb:	48 b8 62 20 73 65 72 	movabs $0x7265767265732062,%rax
    28d2:	76 65 72 
    28d5:	48 89 45 30          	mov    %rax,0x30(%rbp)
    28d9:	c6 45 38 00          	movb   $0x0,0x38(%rbp)
    28dd:	89 df                	mov    %ebx,%edi
    28df:	e8 cc e9 ff ff       	call   12b0 <close@plt>
    28e4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    28e9:	48 8b 9c 24 58 a0 00 	mov    0xa058(%rsp),%rbx
    28f0:	00 
    28f1:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
    28f8:	00 00 
    28fa:	0f 85 96 04 00 00    	jne    2d96 <submitr+0x7aa>
    2900:	48 81 c4 68 a0 00 00 	add    $0xa068,%rsp
    2907:	5b                   	pop    %rbx
    2908:	5d                   	pop    %rbp
    2909:	41 5c                	pop    %r12
    290b:	41 5d                	pop    %r13
    290d:	41 5e                	pop    %r14
    290f:	41 5f                	pop    %r15
    2911:	c3                   	ret    
    2912:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
    2919:	3a 20 43 
    291c:	48 ba 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rdx
    2923:	20 75 6e 
    2926:	48 89 45 00          	mov    %rax,0x0(%rbp)
    292a:	48 89 55 08          	mov    %rdx,0x8(%rbp)
    292e:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
    2935:	74 6f 20 
    2938:	48 ba 63 72 65 61 74 	movabs $0x7320657461657263,%rdx
    293f:	65 20 73 
    2942:	48 89 45 10          	mov    %rax,0x10(%rbp)
    2946:	48 89 55 18          	mov    %rdx,0x18(%rbp)
    294a:	c7 45 20 6f 63 6b 65 	movl   $0x656b636f,0x20(%rbp)
    2951:	66 c7 45 24 74 00    	movw   $0x74,0x24(%rbp)
    2957:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    295c:	eb 8b                	jmp    28e9 <submitr+0x2fd>
    295e:	48 b8 45 72 72 6f 72 	movabs $0x44203a726f727245,%rax
    2965:	3a 20 44 
    2968:	48 ba 4e 53 20 69 73 	movabs $0x6e7520736920534e,%rdx
    296f:	20 75 6e 
    2972:	48 89 45 00          	mov    %rax,0x0(%rbp)
    2976:	48 89 55 08          	mov    %rdx,0x8(%rbp)
    297a:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
    2981:	74 6f 20 
    2984:	48 ba 72 65 73 6f 6c 	movabs $0x2065766c6f736572,%rdx
    298b:	76 65 20 
    298e:	48 89 45 10          	mov    %rax,0x10(%rbp)
    2992:	48 89 55 18          	mov    %rdx,0x18(%rbp)
    2996:	48 b8 41 75 74 6f 6c 	movabs $0x2062616c6f747541,%rax
    299d:	61 62 20 
    29a0:	48 ba 73 65 72 76 65 	movabs $0x6120726576726573,%rdx
    29a7:	72 20 61 
    29aa:	48 89 45 20          	mov    %rax,0x20(%rbp)
    29ae:	48 89 55 28          	mov    %rdx,0x28(%rbp)
    29b2:	c7 45 30 64 64 72 65 	movl   $0x65726464,0x30(%rbp)
    29b9:	66 c7 45 34 73 73    	movw   $0x7373,0x34(%rbp)
    29bf:	c6 45 36 00          	movb   $0x0,0x36(%rbp)
    29c3:	89 df                	mov    %ebx,%edi
    29c5:	e8 e6 e8 ff ff       	call   12b0 <close@plt>
    29ca:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    29cf:	e9 15 ff ff ff       	jmp    28e9 <submitr+0x2fd>
    29d4:	48 b8 45 72 72 6f 72 	movabs $0x55203a726f727245,%rax
    29db:	3a 20 55 
    29de:	48 ba 6e 61 62 6c 65 	movabs $0x6f7420656c62616e,%rdx
    29e5:	20 74 6f 
    29e8:	48 89 45 00          	mov    %rax,0x0(%rbp)
    29ec:	48 89 55 08          	mov    %rdx,0x8(%rbp)
    29f0:	48 b8 20 63 6f 6e 6e 	movabs $0x7463656e6e6f6320,%rax
    29f7:	65 63 74 
    29fa:	48 ba 20 74 6f 20 74 	movabs $0x20656874206f7420,%rdx
    2a01:	68 65 20 
    2a04:	48 89 45 10          	mov    %rax,0x10(%rbp)
    2a08:	48 89 55 18          	mov    %rdx,0x18(%rbp)
    2a0c:	48 b8 41 75 74 6f 6c 	movabs $0x2062616c6f747541,%rax
    2a13:	61 62 20 
    2a16:	48 89 45 20          	mov    %rax,0x20(%rbp)
    2a1a:	c7 45 28 73 65 72 76 	movl   $0x76726573,0x28(%rbp)
    2a21:	66 c7 45 2c 65 72    	movw   $0x7265,0x2c(%rbp)
    2a27:	c6 45 2e 00          	movb   $0x0,0x2e(%rbp)
    2a2b:	89 df                	mov    %ebx,%edi
    2a2d:	e8 7e e8 ff ff       	call   12b0 <close@plt>
    2a32:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    2a37:	e9 ad fe ff ff       	jmp    28e9 <submitr+0x2fd>
    2a3c:	48 b8 45 72 72 6f 72 	movabs $0x52203a726f727245,%rax
    2a43:	3a 20 52 
    2a46:	48 ba 65 73 75 6c 74 	movabs $0x747320746c757365,%rdx
    2a4d:	20 73 74 
    2a50:	48 89 45 00          	mov    %rax,0x0(%rbp)
    2a54:	48 89 55 08          	mov    %rdx,0x8(%rbp)
    2a58:	48 b8 72 69 6e 67 20 	movabs $0x6f6f7420676e6972,%rax
    2a5f:	74 6f 6f 
    2a62:	48 ba 20 6c 61 72 67 	movabs $0x202e656772616c20,%rdx
    2a69:	65 2e 20 
    2a6c:	48 89 45 10          	mov    %rax,0x10(%rbp)
    2a70:	48 89 55 18          	mov    %rdx,0x18(%rbp)
    2a74:	48 b8 49 6e 63 72 65 	movabs $0x6573616572636e49,%rax
    2a7b:	61 73 65 
    2a7e:	48 ba 20 53 55 42 4d 	movabs $0x5254494d42555320,%rdx
    2a85:	49 54 52 
    2a88:	48 89 45 20          	mov    %rax,0x20(%rbp)
    2a8c:	48 89 55 28          	mov    %rdx,0x28(%rbp)
    2a90:	48 b8 5f 4d 41 58 42 	movabs $0x46554258414d5f,%rax
    2a97:	55 46 00 
    2a9a:	48 89 45 30          	mov    %rax,0x30(%rbp)
    2a9e:	89 df                	mov    %ebx,%edi
    2aa0:	e8 0b e8 ff ff       	call   12b0 <close@plt>
    2aa5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    2aaa:	e9 3a fe ff ff       	jmp    28e9 <submitr+0x2fd>
    2aaf:	48 b8 45 72 72 6f 72 	movabs $0x52203a726f727245,%rax
    2ab6:	3a 20 52 
    2ab9:	48 ba 65 73 75 6c 74 	movabs $0x747320746c757365,%rdx
    2ac0:	20 73 74 
    2ac3:	48 89 45 00          	mov    %rax,0x0(%rbp)
    2ac7:	48 89 55 08          	mov    %rdx,0x8(%rbp)
    2acb:	48 b8 72 69 6e 67 20 	movabs $0x6e6f6320676e6972,%rax
    2ad2:	63 6f 6e 
    2ad5:	48 ba 74 61 69 6e 73 	movabs $0x6e6120736e696174,%rdx
    2adc:	20 61 6e 
    2adf:	48 89 45 10          	mov    %rax,0x10(%rbp)
    2ae3:	48 89 55 18          	mov    %rdx,0x18(%rbp)
    2ae7:	48 b8 20 69 6c 6c 65 	movabs $0x6c6167656c6c6920,%rax
    2aee:	67 61 6c 
    2af1:	48 ba 20 6f 72 20 75 	movabs $0x72706e7520726f20,%rdx
    2af8:	6e 70 72 
    2afb:	48 89 45 20          	mov    %rax,0x20(%rbp)
    2aff:	48 89 55 28          	mov    %rdx,0x28(%rbp)
    2b03:	48 b8 69 6e 74 61 62 	movabs $0x20656c6261746e69,%rax
    2b0a:	6c 65 20 
    2b0d:	48 ba 63 68 61 72 61 	movabs $0x6574636172616863,%rdx
    2b14:	63 74 65 
    2b17:	48 89 45 30          	mov    %rax,0x30(%rbp)
    2b1b:	48 89 55 38          	mov    %rdx,0x38(%rbp)
    2b1f:	66 c7 45 40 72 2e    	movw   $0x2e72,0x40(%rbp)
    2b25:	c6 45 42 00          	movb   $0x0,0x42(%rbp)
    2b29:	89 df                	mov    %ebx,%edi
    2b2b:	e8 80 e7 ff ff       	call   12b0 <close@plt>
    2b30:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    2b35:	e9 af fd ff ff       	jmp    28e9 <submitr+0x2fd>
    2b3a:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
    2b41:	3a 20 43 
    2b44:	48 ba 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rdx
    2b4b:	20 75 6e 
    2b4e:	48 89 45 00          	mov    %rax,0x0(%rbp)
    2b52:	48 89 55 08          	mov    %rdx,0x8(%rbp)
    2b56:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
    2b5d:	74 6f 20 
    2b60:	48 ba 77 72 69 74 65 	movabs $0x6f74206574697277,%rdx
    2b67:	20 74 6f 
    2b6a:	48 89 45 10          	mov    %rax,0x10(%rbp)
    2b6e:	48 89 55 18          	mov    %rdx,0x18(%rbp)
    2b72:	48 b8 20 74 68 65 20 	movabs $0x7475412065687420,%rax
    2b79:	41 75 74 
    2b7c:	48 ba 6f 6c 61 62 20 	movabs $0x7265732062616c6f,%rdx
    2b83:	73 65 72 
    2b86:	48 89 45 20          	mov    %rax,0x20(%rbp)
    2b8a:	48 89 55 28          	mov    %rdx,0x28(%rbp)
    2b8e:	c7 45 30 76 65 72 00 	movl   $0x726576,0x30(%rbp)
    2b95:	89 df                	mov    %ebx,%edi
    2b97:	e8 14 e7 ff ff       	call   12b0 <close@plt>
    2b9c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    2ba1:	e9 43 fd ff ff       	jmp    28e9 <submitr+0x2fd>
    2ba6:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
    2bad:	3a 20 43 
    2bb0:	48 ba 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rdx
    2bb7:	20 75 6e 
    2bba:	48 89 45 00          	mov    %rax,0x0(%rbp)
    2bbe:	48 89 55 08          	mov    %rdx,0x8(%rbp)
    2bc2:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
    2bc9:	74 6f 20 
    2bcc:	48 ba 72 65 61 64 20 	movabs $0x7269662064616572,%rdx
    2bd3:	66 69 72 
    2bd6:	48 89 45 10          	mov    %rax,0x10(%rbp)
    2bda:	48 89 55 18          	mov    %rdx,0x18(%rbp)
    2bde:	48 b8 73 74 20 68 65 	movabs $0x6564616568207473,%rax
    2be5:	61 64 65 
    2be8:	48 ba 72 20 66 72 6f 	movabs $0x41206d6f72662072,%rdx
    2bef:	6d 20 41 
    2bf2:	48 89 45 20          	mov    %rax,0x20(%rbp)
    2bf6:	48 89 55 28          	mov    %rdx,0x28(%rbp)
    2bfa:	48 b8 75 74 6f 6c 61 	movabs $0x732062616c6f7475,%rax
    2c01:	62 20 73 
    2c04:	48 89 45 30          	mov    %rax,0x30(%rbp)
    2c08:	c7 45 38 65 72 76 65 	movl   $0x65767265,0x38(%rbp)
    2c0f:	66 c7 45 3c 72 00    	movw   $0x72,0x3c(%rbp)
    2c15:	89 df                	mov    %ebx,%edi
    2c17:	e8 94 e6 ff ff       	call   12b0 <close@plt>
    2c1c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    2c21:	e9 c3 fc ff ff       	jmp    28e9 <submitr+0x2fd>
    2c26:	48 8d b4 24 50 20 00 	lea    0x2050(%rsp),%rsi
    2c2d:	00 
    2c2e:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
    2c33:	ba 00 20 00 00       	mov    $0x2000,%edx
    2c38:	e8 fe f7 ff ff       	call   243b <rio_readlineb>
    2c3d:	48 85 c0             	test   %rax,%rax
    2c40:	0f 8e 96 00 00 00    	jle    2cdc <submitr+0x6f0>
    2c46:	44 8b 44 24 2c       	mov    0x2c(%rsp),%r8d
    2c4b:	41 81 f8 c8 00 00 00 	cmp    $0xc8,%r8d
    2c52:	0f 85 05 01 00 00    	jne    2d5d <submitr+0x771>
    2c58:	48 8d b4 24 50 20 00 	lea    0x2050(%rsp),%rsi
    2c5f:	00 
    2c60:	48 89 ef             	mov    %rbp,%rdi
    2c63:	e8 f8 e5 ff ff       	call   1260 <strcpy@plt>
    2c68:	89 df                	mov    %ebx,%edi
    2c6a:	e8 41 e6 ff ff       	call   12b0 <close@plt>
    2c6f:	b9 04 00 00 00       	mov    $0x4,%ecx
    2c74:	48 8d 3d ca 1c 00 00 	lea    0x1cca(%rip),%rdi        # 4945 <array.3497+0x505>
    2c7b:	48 89 ee             	mov    %rbp,%rsi
    2c7e:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    2c80:	0f 97 c0             	seta   %al
    2c83:	1c 00                	sbb    $0x0,%al
    2c85:	0f be c0             	movsbl %al,%eax
    2c88:	85 c0                	test   %eax,%eax
    2c8a:	0f 84 59 fc ff ff    	je     28e9 <submitr+0x2fd>
    2c90:	b9 05 00 00 00       	mov    $0x5,%ecx
    2c95:	48 8d 3d ad 1c 00 00 	lea    0x1cad(%rip),%rdi        # 4949 <array.3497+0x509>
    2c9c:	48 89 ee             	mov    %rbp,%rsi
    2c9f:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    2ca1:	0f 97 c0             	seta   %al
    2ca4:	1c 00                	sbb    $0x0,%al
    2ca6:	0f be c0             	movsbl %al,%eax
    2ca9:	85 c0                	test   %eax,%eax
    2cab:	0f 84 38 fc ff ff    	je     28e9 <submitr+0x2fd>
    2cb1:	b9 03 00 00 00       	mov    $0x3,%ecx
    2cb6:	48 8d 3d 91 1c 00 00 	lea    0x1c91(%rip),%rdi        # 494e <array.3497+0x50e>
    2cbd:	48 89 ee             	mov    %rbp,%rsi
    2cc0:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    2cc2:	0f 97 c0             	seta   %al
    2cc5:	1c 00                	sbb    $0x0,%al
    2cc7:	0f be c0             	movsbl %al,%eax
    2cca:	85 c0                	test   %eax,%eax
    2ccc:	0f 84 17 fc ff ff    	je     28e9 <submitr+0x2fd>
    2cd2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    2cd7:	e9 0d fc ff ff       	jmp    28e9 <submitr+0x2fd>
    2cdc:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
    2ce3:	3a 20 43 
    2ce6:	48 ba 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rdx
    2ced:	20 75 6e 
    2cf0:	48 89 45 00          	mov    %rax,0x0(%rbp)
    2cf4:	48 89 55 08          	mov    %rdx,0x8(%rbp)
    2cf8:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
    2cff:	74 6f 20 
    2d02:	48 ba 72 65 61 64 20 	movabs $0x6174732064616572,%rdx
    2d09:	73 74 61 
    2d0c:	48 89 45 10          	mov    %rax,0x10(%rbp)
    2d10:	48 89 55 18          	mov    %rdx,0x18(%rbp)
    2d14:	48 b8 74 75 73 20 6d 	movabs $0x7373656d20737574,%rax
    2d1b:	65 73 73 
    2d1e:	48 ba 61 67 65 20 66 	movabs $0x6d6f726620656761,%rdx
    2d25:	72 6f 6d 
    2d28:	48 89 45 20          	mov    %rax,0x20(%rbp)
    2d2c:	48 89 55 28          	mov    %rdx,0x28(%rbp)
    2d30:	48 b8 20 41 75 74 6f 	movabs $0x62616c6f74754120,%rax
    2d37:	6c 61 62 
    2d3a:	48 ba 20 73 65 72 76 	movabs $0x72657672657320,%rdx
    2d41:	65 72 00 
    2d44:	48 89 45 30          	mov    %rax,0x30(%rbp)
    2d48:	48 89 55 38          	mov    %rdx,0x38(%rbp)
    2d4c:	89 df                	mov    %ebx,%edi
    2d4e:	e8 5d e5 ff ff       	call   12b0 <close@plt>
    2d53:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    2d58:	e9 8c fb ff ff       	jmp    28e9 <submitr+0x2fd>
    2d5d:	4c 8d 8c 24 50 80 00 	lea    0x8050(%rsp),%r9
    2d64:	00 
    2d65:	48 8d 0d 94 1b 00 00 	lea    0x1b94(%rip),%rcx        # 4900 <array.3497+0x4c0>
    2d6c:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
    2d73:	be 01 00 00 00       	mov    $0x1,%esi
    2d78:	48 89 ef             	mov    %rbp,%rdi
    2d7b:	b8 00 00 00 00       	mov    $0x0,%eax
    2d80:	e8 5b e6 ff ff       	call   13e0 <__sprintf_chk@plt>
    2d85:	89 df                	mov    %ebx,%edi
    2d87:	e8 24 e5 ff ff       	call   12b0 <close@plt>
    2d8c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    2d91:	e9 53 fb ff ff       	jmp    28e9 <submitr+0x2fd>
    2d96:	e8 f5 e4 ff ff       	call   1290 <__stack_chk_fail@plt>

0000000000002d9b <init_timeout>:
    2d9b:	f3 0f 1e fa          	endbr64 
    2d9f:	85 ff                	test   %edi,%edi
    2da1:	74 26                	je     2dc9 <init_timeout+0x2e>
    2da3:	53                   	push   %rbx
    2da4:	89 fb                	mov    %edi,%ebx
    2da6:	78 1a                	js     2dc2 <init_timeout+0x27>
    2da8:	48 8d 35 71 f5 ff ff 	lea    -0xa8f(%rip),%rsi        # 2320 <sigalrm_handler>
    2daf:	bf 0e 00 00 00       	mov    $0xe,%edi
    2db4:	e8 27 e5 ff ff       	call   12e0 <signal@plt>
    2db9:	89 df                	mov    %ebx,%edi
    2dbb:	e8 e0 e4 ff ff       	call   12a0 <alarm@plt>
    2dc0:	5b                   	pop    %rbx
    2dc1:	c3                   	ret    
    2dc2:	bb 00 00 00 00       	mov    $0x0,%ebx
    2dc7:	eb df                	jmp    2da8 <init_timeout+0xd>
    2dc9:	c3                   	ret    

0000000000002dca <init_driver>:
    2dca:	f3 0f 1e fa          	endbr64 
    2dce:	41 54                	push   %r12
    2dd0:	55                   	push   %rbp
    2dd1:	53                   	push   %rbx
    2dd2:	48 83 ec 20          	sub    $0x20,%rsp
    2dd6:	48 89 fd             	mov    %rdi,%rbp
    2dd9:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    2de0:	00 00 
    2de2:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    2de7:	31 c0                	xor    %eax,%eax
    2de9:	be 01 00 00 00       	mov    $0x1,%esi
    2dee:	bf 0d 00 00 00       	mov    $0xd,%edi
    2df3:	e8 e8 e4 ff ff       	call   12e0 <signal@plt>
    2df8:	be 01 00 00 00       	mov    $0x1,%esi
    2dfd:	bf 1d 00 00 00       	mov    $0x1d,%edi
    2e02:	e8 d9 e4 ff ff       	call   12e0 <signal@plt>
    2e07:	be 01 00 00 00       	mov    $0x1,%esi
    2e0c:	bf 1d 00 00 00       	mov    $0x1d,%edi
    2e11:	e8 ca e4 ff ff       	call   12e0 <signal@plt>
    2e16:	ba 00 00 00 00       	mov    $0x0,%edx
    2e1b:	be 01 00 00 00       	mov    $0x1,%esi
    2e20:	bf 02 00 00 00       	mov    $0x2,%edi
    2e25:	e8 c6 e5 ff ff       	call   13f0 <socket@plt>
    2e2a:	85 c0                	test   %eax,%eax
    2e2c:	0f 88 9c 00 00 00    	js     2ece <init_driver+0x104>
    2e32:	89 c3                	mov    %eax,%ebx
    2e34:	48 8d 3d 16 1b 00 00 	lea    0x1b16(%rip),%rdi        # 4951 <array.3497+0x511>
    2e3b:	e8 b0 e4 ff ff       	call   12f0 <gethostbyname@plt>
    2e40:	48 85 c0             	test   %rax,%rax
    2e43:	0f 84 d1 00 00 00    	je     2f1a <init_driver+0x150>
    2e49:	49 89 e4             	mov    %rsp,%r12
    2e4c:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    2e53:	00 
    2e54:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    2e5b:	00 00 
    2e5d:	66 c7 04 24 02 00    	movw   $0x2,(%rsp)
    2e63:	48 63 50 14          	movslq 0x14(%rax),%rdx
    2e67:	48 8b 40 18          	mov    0x18(%rax),%rax
    2e6b:	48 8b 30             	mov    (%rax),%rsi
    2e6e:	48 8d 7c 24 04       	lea    0x4(%rsp),%rdi
    2e73:	b9 0c 00 00 00       	mov    $0xc,%ecx
    2e78:	e8 83 e4 ff ff       	call   1300 <__memmove_chk@plt>
    2e7d:	66 c7 44 24 02 30 39 	movw   $0x3930,0x2(%rsp)
    2e84:	ba 10 00 00 00       	mov    $0x10,%edx
    2e89:	4c 89 e6             	mov    %r12,%rsi
    2e8c:	89 df                	mov    %ebx,%edi
    2e8e:	e8 0d e5 ff ff       	call   13a0 <connect@plt>
    2e93:	85 c0                	test   %eax,%eax
    2e95:	0f 88 e7 00 00 00    	js     2f82 <init_driver+0x1b8>
    2e9b:	89 df                	mov    %ebx,%edi
    2e9d:	e8 0e e4 ff ff       	call   12b0 <close@plt>
    2ea2:	66 c7 45 00 4f 4b    	movw   $0x4b4f,0x0(%rbp)
    2ea8:	c6 45 02 00          	movb   $0x0,0x2(%rbp)
    2eac:	b8 00 00 00 00       	mov    $0x0,%eax
    2eb1:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    2eb6:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    2ebd:	00 00 
    2ebf:	0f 85 10 01 00 00    	jne    2fd5 <init_driver+0x20b>
    2ec5:	48 83 c4 20          	add    $0x20,%rsp
    2ec9:	5b                   	pop    %rbx
    2eca:	5d                   	pop    %rbp
    2ecb:	41 5c                	pop    %r12
    2ecd:	c3                   	ret    
    2ece:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
    2ed5:	3a 20 43 
    2ed8:	48 ba 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rdx
    2edf:	20 75 6e 
    2ee2:	48 89 45 00          	mov    %rax,0x0(%rbp)
    2ee6:	48 89 55 08          	mov    %rdx,0x8(%rbp)
    2eea:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
    2ef1:	74 6f 20 
    2ef4:	48 ba 63 72 65 61 74 	movabs $0x7320657461657263,%rdx
    2efb:	65 20 73 
    2efe:	48 89 45 10          	mov    %rax,0x10(%rbp)
    2f02:	48 89 55 18          	mov    %rdx,0x18(%rbp)
    2f06:	c7 45 20 6f 63 6b 65 	movl   $0x656b636f,0x20(%rbp)
    2f0d:	66 c7 45 24 74 00    	movw   $0x74,0x24(%rbp)
    2f13:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    2f18:	eb 97                	jmp    2eb1 <init_driver+0xe7>
    2f1a:	48 b8 45 72 72 6f 72 	movabs $0x44203a726f727245,%rax
    2f21:	3a 20 44 
    2f24:	48 ba 4e 53 20 69 73 	movabs $0x6e7520736920534e,%rdx
    2f2b:	20 75 6e 
    2f2e:	48 89 45 00          	mov    %rax,0x0(%rbp)
    2f32:	48 89 55 08          	mov    %rdx,0x8(%rbp)
    2f36:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
    2f3d:	74 6f 20 
    2f40:	48 ba 72 65 73 6f 6c 	movabs $0x2065766c6f736572,%rdx
    2f47:	76 65 20 
    2f4a:	48 89 45 10          	mov    %rax,0x10(%rbp)
    2f4e:	48 89 55 18          	mov    %rdx,0x18(%rbp)
    2f52:	48 b8 73 65 72 76 65 	movabs $0x6120726576726573,%rax
    2f59:	72 20 61 
    2f5c:	48 89 45 20          	mov    %rax,0x20(%rbp)
    2f60:	c7 45 28 64 64 72 65 	movl   $0x65726464,0x28(%rbp)
    2f67:	66 c7 45 2c 73 73    	movw   $0x7373,0x2c(%rbp)
    2f6d:	c6 45 2e 00          	movb   $0x0,0x2e(%rbp)
    2f71:	89 df                	mov    %ebx,%edi
    2f73:	e8 38 e3 ff ff       	call   12b0 <close@plt>
    2f78:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    2f7d:	e9 2f ff ff ff       	jmp    2eb1 <init_driver+0xe7>
    2f82:	48 b8 45 72 72 6f 72 	movabs $0x55203a726f727245,%rax
    2f89:	3a 20 55 
    2f8c:	48 ba 6e 61 62 6c 65 	movabs $0x6f7420656c62616e,%rdx
    2f93:	20 74 6f 
    2f96:	48 89 45 00          	mov    %rax,0x0(%rbp)
    2f9a:	48 89 55 08          	mov    %rdx,0x8(%rbp)
    2f9e:	48 b8 20 63 6f 6e 6e 	movabs $0x7463656e6e6f6320,%rax
    2fa5:	65 63 74 
    2fa8:	48 ba 20 74 6f 20 73 	movabs $0x76726573206f7420,%rdx
    2faf:	65 72 76 
    2fb2:	48 89 45 10          	mov    %rax,0x10(%rbp)
    2fb6:	48 89 55 18          	mov    %rdx,0x18(%rbp)
    2fba:	66 c7 45 20 65 72    	movw   $0x7265,0x20(%rbp)
    2fc0:	c6 45 22 00          	movb   $0x0,0x22(%rbp)
    2fc4:	89 df                	mov    %ebx,%edi
    2fc6:	e8 e5 e2 ff ff       	call   12b0 <close@plt>
    2fcb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    2fd0:	e9 dc fe ff ff       	jmp    2eb1 <init_driver+0xe7>
    2fd5:	e8 b6 e2 ff ff       	call   1290 <__stack_chk_fail@plt>

0000000000002fda <driver_post>:
    2fda:	f3 0f 1e fa          	endbr64 
    2fde:	53                   	push   %rbx
    2fdf:	4c 89 cb             	mov    %r9,%rbx
    2fe2:	45 85 c0             	test   %r8d,%r8d
    2fe5:	75 18                	jne    2fff <driver_post+0x25>
    2fe7:	48 85 ff             	test   %rdi,%rdi
    2fea:	74 05                	je     2ff1 <driver_post+0x17>
    2fec:	80 3f 00             	cmpb   $0x0,(%rdi)
    2fef:	75 37                	jne    3028 <driver_post+0x4e>
    2ff1:	66 c7 03 4f 4b       	movw   $0x4b4f,(%rbx)
    2ff6:	c6 43 02 00          	movb   $0x0,0x2(%rbx)
    2ffa:	44 89 c0             	mov    %r8d,%eax
    2ffd:	5b                   	pop    %rbx
    2ffe:	c3                   	ret    
    2fff:	48 89 ca             	mov    %rcx,%rdx
    3002:	48 8d 35 58 19 00 00 	lea    0x1958(%rip),%rsi        # 4961 <array.3497+0x521>
    3009:	bf 01 00 00 00       	mov    $0x1,%edi
    300e:	b8 00 00 00 00       	mov    $0x0,%eax
    3013:	e8 48 e3 ff ff       	call   1360 <__printf_chk@plt>
    3018:	66 c7 03 4f 4b       	movw   $0x4b4f,(%rbx)
    301d:	c6 43 02 00          	movb   $0x0,0x2(%rbx)
    3021:	b8 00 00 00 00       	mov    $0x0,%eax
    3026:	eb d5                	jmp    2ffd <driver_post+0x23>
    3028:	48 83 ec 08          	sub    $0x8,%rsp
    302c:	41 51                	push   %r9
    302e:	49 89 c9             	mov    %rcx,%r9
    3031:	49 89 d0             	mov    %rdx,%r8
    3034:	48 89 f9             	mov    %rdi,%rcx
    3037:	48 89 f2             	mov    %rsi,%rdx
    303a:	be 39 30 00 00       	mov    $0x3039,%esi
    303f:	48 8d 3d 0b 19 00 00 	lea    0x190b(%rip),%rdi        # 4951 <array.3497+0x511>
    3046:	e8 a1 f5 ff ff       	call   25ec <submitr>
    304b:	48 83 c4 10          	add    $0x10,%rsp
    304f:	eb ac                	jmp    2ffd <driver_post+0x23>
    3051:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    3058:	00 00 00 
    305b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003060 <__libc_csu_init>:
    3060:	f3 0f 1e fa          	endbr64 
    3064:	41 57                	push   %r15
    3066:	4c 8d 3d 53 3c 00 00 	lea    0x3c53(%rip),%r15        # 6cc0 <__frame_dummy_init_array_entry>
    306d:	41 56                	push   %r14
    306f:	49 89 d6             	mov    %rdx,%r14
    3072:	41 55                	push   %r13
    3074:	49 89 f5             	mov    %rsi,%r13
    3077:	41 54                	push   %r12
    3079:	41 89 fc             	mov    %edi,%r12d
    307c:	55                   	push   %rbp
    307d:	48 8d 2d 44 3c 00 00 	lea    0x3c44(%rip),%rbp        # 6cc8 <__do_global_dtors_aux_fini_array_entry>
    3084:	53                   	push   %rbx
    3085:	4c 29 fd             	sub    %r15,%rbp
    3088:	48 83 ec 08          	sub    $0x8,%rsp
    308c:	e8 6f df ff ff       	call   1000 <_init>
    3091:	48 c1 fd 03          	sar    $0x3,%rbp
    3095:	74 1f                	je     30b6 <__libc_csu_init+0x56>
    3097:	31 db                	xor    %ebx,%ebx
    3099:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    30a0:	4c 89 f2             	mov    %r14,%rdx
    30a3:	4c 89 ee             	mov    %r13,%rsi
    30a6:	44 89 e7             	mov    %r12d,%edi
    30a9:	41 ff 14 df          	call   *(%r15,%rbx,8)
    30ad:	48 83 c3 01          	add    $0x1,%rbx
    30b1:	48 39 dd             	cmp    %rbx,%rbp
    30b4:	75 ea                	jne    30a0 <__libc_csu_init+0x40>
    30b6:	48 83 c4 08          	add    $0x8,%rsp
    30ba:	5b                   	pop    %rbx
    30bb:	5d                   	pop    %rbp
    30bc:	41 5c                	pop    %r12
    30be:	41 5d                	pop    %r13
    30c0:	41 5e                	pop    %r14
    30c2:	41 5f                	pop    %r15
    30c4:	c3                   	ret    
    30c5:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    30cc:	00 00 00 00 

00000000000030d0 <__libc_csu_fini>:
    30d0:	f3 0f 1e fa          	endbr64 
    30d4:	c3                   	ret    

Disassembly of section .fini:

00000000000030d8 <_fini>:
    30d8:	f3 0f 1e fa          	endbr64 
    30dc:	48 83 ec 08          	sub    $0x8,%rsp
    30e0:	48 83 c4 08          	add    $0x8,%rsp
    30e4:	c3                   	ret    
