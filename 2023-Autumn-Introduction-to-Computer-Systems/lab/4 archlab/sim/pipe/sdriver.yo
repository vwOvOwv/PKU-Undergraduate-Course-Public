                            | #######################################################################
                            | # Test for copying block of size 4;
                            | #######################################################################
0x000:                      | 	.pos 0
0x000: 30f4f004000000000000 | main:	irmovq Stack, %rsp  	# Set up stack pointer
                            | 
                            | 	# Set up arguments for copy function and then invoke it
0x00a: 30f20400000000000000 | 	irmovq $4, %rdx		# src and dst have 4 elements
0x014: 30f64804000000000000 | 	irmovq dest, %rsi	# dst array
0x01e: 30f71804000000000000 | 	irmovq src, %rdi	# src array
0x028: 803200000000000000   | 	call ncopy		 
0x031: 00                   | 	halt			# should halt with num nonzeros in %rax
0x032:                      | StartFun:
                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | # 刘沛雨 2100012289
                            | # Describe how and why you modified the baseline code.
                            | # 思路：十路循环展开+分治进行余数处理
                            | # 十路循环展开中通过将src数组中的数依次读入不同寄存器，保证不发生数据冒险，使流水线持续运行
                            | # 余数处理是程序优化的主要部分，循环结束后len可以取0-9,通过类似二分查找的方式确定len的值
                            | # 在此思路的基础上，通过设置合适的“二分查找点”和指令排列顺序，尽可能多地减少指令数量
                            | # 除此之外，还通过将mrmovq和rmmovq分开的方式避免加载-使用冒险
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x032:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            | 	# Loop header
0x032: c0f2f6ffffffffffffff | 	iaddq $-10,%rdx
0x03c: 720602000000000000   | 	jl endHandler
0x045:                      | Loop1:
0x045: 50170000000000000000 | 	mrmovq (%rdi),%rcx
0x04f: 50870800000000000000 | 	mrmovq 8(%rdi),%r8
0x059: 50971000000000000000 | 	mrmovq 16(%rdi),%r9
0x063: 50a71800000000000000 | 	mrmovq 24(%rdi),%r10
0x06d: 50b72000000000000000 | 	mrmovq 32(%rdi),%r11
0x077: 50c72800000000000000 | 	mrmovq 40(%rdi),%r12
0x081: 50d73000000000000000 | 	mrmovq 48(%rdi),%r13
0x08b: 50e73800000000000000 | 	mrmovq 56(%rdi),%r14
0x095: 50374000000000000000 | 	mrmovq 64(%rdi),%rbx
0x09f: 50574800000000000000 | 	mrmovq 72(%rdi),%rbp
0x0a9: 40160000000000000000 | 	rmmovq %rcx,(%rsi)
0x0b3: 40860800000000000000 | 	rmmovq %r8,8(%rsi)
0x0bd: 40961000000000000000 | 	rmmovq %r9,16(%rsi)
0x0c7: 40a61800000000000000 | 	rmmovq %r10,24(%rsi)
0x0d1: 40b62000000000000000 | 	rmmovq %r11,32(%rsi)
0x0db: 40c62800000000000000 | 	rmmovq %r12,40(%rsi)
0x0e5: 40d63000000000000000 | 	rmmovq %r13,48(%rsi)
0x0ef: 40e63800000000000000 | 	rmmovq %r14,56(%rsi)
0x0f9: 40364000000000000000 | 	rmmovq %rbx,64(%rsi)
0x103: 40564800000000000000 | 	rmmovq %rbp,72(%rsi)
0x10d: 6211                 | 	andq %rcx,%rcx
0x10f: 712201000000000000   | 	jle Npos0
0x118: c0f00100000000000000 | 	iaddq $1,%rax
0x122:                      | Npos0:
0x122: 6288                 | 	andq %r8,%r8
0x124: 713701000000000000   | 	jle Npos1
0x12d: c0f00100000000000000 | 	iaddq $1,%rax
0x137:                      | Npos1:
0x137: 6299                 | 	andq %r9,%r9
0x139: 714c01000000000000   | 	jle Npos2
0x142: c0f00100000000000000 | 	iaddq $1,%rax
0x14c:                      | Npos2:
0x14c: 62aa                 | 	andq %r10,%r10
0x14e: 716101000000000000   | 	jle Npos3
0x157: c0f00100000000000000 | 	iaddq $1,%rax
0x161:                      | Npos3:
0x161: 62bb                 | 	andq %r11,%r11
0x163: 717601000000000000   | 	jle Npos4
0x16c: c0f00100000000000000 | 	iaddq $1,%rax
0x176:                      | Npos4:
0x176: 62cc                 | 	andq %r12,%r12
0x178: 718b01000000000000   | 	jle Npos5
0x181: c0f00100000000000000 | 	iaddq $1,%rax
0x18b:                      | Npos5:
0x18b: 62dd                 | 	andq %r13,%r13
0x18d: 71a001000000000000   | 	jle Npos6
0x196: c0f00100000000000000 | 	iaddq $1,%rax
0x1a0:                      | Npos6:
0x1a0: 62ee                 | 	andq %r14,%r14
0x1a2: 71b501000000000000   | 	jle Npos7
0x1ab: c0f00100000000000000 | 	iaddq $1,%rax
0x1b5:                      | Npos7:
0x1b5: 6233                 | 	andq %rbx,%rbx
0x1b7: 71ca01000000000000   | 	jle Npos8
0x1c0: c0f00100000000000000 | 	iaddq $1,%rax
0x1ca:                      | Npos8:
0x1ca: 6255                 | 	andq %rbp,%rbp
0x1cc: 71df01000000000000   | 	jle Npos9
0x1d5: c0f00100000000000000 | 	iaddq $1,%rax
0x1df:                      | Npos9:
0x1df: c0f75000000000000000 | 	iaddq $80,%rdi
0x1e9: c0f65000000000000000 | 	iaddq $80,%rsi
0x1f3: c0f2f6ffffffffffffff | 	iaddq $-10,%rdx
0x1fd: 754500000000000000   | 	jge Loop1
                            | 
0x206:                      | endHandler:
0x206: 50170000000000000000 | 	mrmovq (%rdi),%rcx
0x210: c0f20700000000000000 | 	iaddq $7,%rdx
0x21a: 757702000000000000   | 	jge endHandler3_9
0x223:                      | endHandler0_2:
0x223: c0f20200000000000000 | 	iaddq $2,%rdx
0x22d: 721604000000000000   | 	jl Done
0x236: 40160000000000000000 | 	rmmovq %rcx,(%rsi)
0x240: 730104000000000000   | 	je endHandler1
0x249: 70d803000000000000   | 	jmp endHandler2
0x252:                      | endHandler4_6:
0x252: c0f20200000000000000 | 	iaddq $2,%rdx
0x25c: 728603000000000000   | 	jl endHandler4
0x265: 735d03000000000000   | 	je endHandler5
0x26e: 703403000000000000   | 	jmp endHandler6
0x277:                      | endHandler3_9:
0x277: 40160000000000000000 | 	rmmovq %rcx,(%rsi)
0x281: 73af03000000000000   | 	je endHandler3
0x28a:                      | endHandler4_9:
0x28a: c0f2fcffffffffffffff | 	iaddq $-4,%rdx
0x294: 725202000000000000   | 	jl endHandler4_6
0x29d: 730b03000000000000   | 	je endHandler7
0x2a6:                      | endHandler8_9:
0x2a6: c0f2feffffffffffffff | 	iaddq $-2,%rdx
0x2b0: 72e202000000000000   | 	jl endHandler8
0x2b9:                      | endHandler9:
0x2b9: 6211                 |     andq %rcx,%rcx
0x2bb: 50174000000000000000 | 	mrmovq 64(%rdi),%rcx
0x2c5: 71d802000000000000   |     jle Npos10
0x2ce: c0f00100000000000000 | 	iaddq $1,%rax
0x2d8:                      | Npos10:
0x2d8: 40164000000000000000 |     rmmovq %rcx,64(%rsi)
0x2e2:                      | endHandler8:
0x2e2: 6211                 |     andq %rcx,%rcx
0x2e4: 50173800000000000000 | 	mrmovq 56(%rdi),%rcx
0x2ee: 710103000000000000   | 	jle Npos11
0x2f7: c0f00100000000000000 | 	iaddq $1,%rax
0x301:                      | Npos11:
0x301: 40163800000000000000 |     rmmovq %rcx,56(%rsi)
0x30b:                      | endHandler7:
0x30b: 6211                 |     andq %rcx,%rcx
0x30d: 50173000000000000000 | 	mrmovq 48(%rdi),%rcx
0x317: 712a03000000000000   |     jle Npos12
0x320: c0f00100000000000000 | 	iaddq $1,%rax
0x32a:                      | Npos12:
0x32a: 40163000000000000000 | 	rmmovq %rcx,48(%rsi)
0x334:                      | endHandler6:
0x334: 6211                 | 	andq %rcx,%rcx
0x336: 50172800000000000000 | 	mrmovq 40(%rdi),%rcx
0x340: 715303000000000000   | 	jle Npos13
0x349: c0f00100000000000000 | 	iaddq $1,%rax
0x353:                      | Npos13:
0x353: 40162800000000000000 |     rmmovq %rcx,40(%rsi)
0x35d:                      | endHandler5:
0x35d: 6211                 | 	andq %rcx,%rcx
0x35f: 50172000000000000000 | 	mrmovq 32(%rdi),%rcx
0x369: 717c03000000000000   | 	jle Npos14
0x372: c0f00100000000000000 | 	iaddq $1,%rax
0x37c:                      | Npos14:
0x37c: 40162000000000000000 |     rmmovq %rcx,32(%rsi)
0x386:                      | endHandler4:
0x386: 6211                 | 	andq %rcx,%rcx
0x388: 50171800000000000000 | 	mrmovq 24(%rdi),%rcx
0x392: 71a503000000000000   | 	jle Npos15
0x39b: c0f00100000000000000 | 	iaddq $1,%rax
0x3a5:                      | Npos15:
0x3a5: 40161800000000000000 |     rmmovq %rcx,24(%rsi)
0x3af:                      | endHandler3:
0x3af: 6211                 | 	andq %rcx,%rcx
0x3b1: 50171000000000000000 | 	mrmovq 16(%rdi),%rcx
0x3bb: 71ce03000000000000   | 	jle Npos16
0x3c4: c0f00100000000000000 | 	iaddq $1,%rax
0x3ce:                      | Npos16:
0x3ce: 40161000000000000000 |     rmmovq %rcx,16(%rsi)
0x3d8:                      | endHandler2:
0x3d8: 6211                 | 	andq %rcx,%rcx
0x3da: 50170800000000000000 | 	mrmovq 8(%rdi),%rcx
0x3e4: 71f703000000000000   | 	jle Npos17
0x3ed: c0f00100000000000000 | 	iaddq $1,%rax
0x3f7:                      | Npos17:
0x3f7: 40160800000000000000 |     rmmovq %rcx,8(%rsi)
0x401:                      | endHandler1:
0x401: 6211                 | 	andq %rcx,%rcx
0x403: 711604000000000000   | 	jle Done
0x40c: c0f00100000000000000 | 	iaddq $1,%rax
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x416:                      | Done:
0x416: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x417:                      | End:
                            | #/* $end ncopy-ys */
0x417:                      | EndFun:
                            | 
                            | ###############################
                            | # Source and destination blocks 
                            | ###############################
0x418:                      | 	.align 8
0x418:                      | src:
0x418: 0100000000000000     | 	.quad 1
0x420: feffffffffffffff     | 	.quad -2
0x428: fdffffffffffffff     | 	.quad -3
0x430: 0400000000000000     | 	.quad 4
0x438: fadebc0000000000     | 	.quad 0xbcdefa # This shouldn't get moved
                            | 
0x440:                      | 	.align 16
0x440:                      | Predest:
0x440: fadebc0000000000     | 	.quad 0xbcdefa
0x448:                      | dest:
0x448: abefcd0000000000     | 	.quad 0xcdefab
0x450: abefcd0000000000     | 	.quad 0xcdefab
0x458: abefcd0000000000     | 	.quad 0xcdefab
0x460: abefcd0000000000     | 	.quad 0xcdefab
0x468:                      | Postdest:
0x468: bcfade0000000000     | 	.quad 0xdefabc
                            | 
0x470:                      | .align 8
                            | # Run time stack
0x470: 0000000000000000     | 	.quad 0
0x478: 0000000000000000     | 	.quad 0
0x480: 0000000000000000     | 	.quad 0
0x488: 0000000000000000     | 	.quad 0
0x490: 0000000000000000     | 	.quad 0
0x498: 0000000000000000     | 	.quad 0
0x4a0: 0000000000000000     | 	.quad 0
0x4a8: 0000000000000000     | 	.quad 0
0x4b0: 0000000000000000     | 	.quad 0
0x4b8: 0000000000000000     | 	.quad 0
0x4c0: 0000000000000000     | 	.quad 0
0x4c8: 0000000000000000     | 	.quad 0
0x4d0: 0000000000000000     | 	.quad 0
0x4d8: 0000000000000000     | 	.quad 0
0x4e0: 0000000000000000     | 	.quad 0
0x4e8: 0000000000000000     | 	.quad 0
                            | 
0x4f0:                      | Stack:
